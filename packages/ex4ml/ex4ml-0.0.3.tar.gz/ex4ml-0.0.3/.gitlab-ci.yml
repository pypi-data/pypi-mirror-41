# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# image: "python:2.7"

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

variables:
  #  POSTGRES_DB: database_name
  PIPENV_CACHE_DIR: vendor/python

# Cache packages in between builds
cache:
  paths:
    - vendor/python

# This is a basic example for a packages or script which doesn't use
# services such as redis or postgres
before_script:
  - python -V # Print out Python version for debugging
  # Setup git
  - apt-get install git
  - git config --global user.email "minds@mines.edu"
  - git config --global user.name "MINDS at Mines"
  # Install dependencies of your package and the testing environment
  - pip install pipenv
  - pipenv install --dev --deploy --system

# Run in different environments

lint:
  image: "python:3.6"
  script:
    - pylint src/ex4ml/*.py src/ex4ml/*/*.py tests/*/*/*.py
    - pycodestyle src/ tests/

test-all:
  image: "python:3.6"
  script:
    - python setup.py test

docs:
  image: "python:3.6"
  before_script:
    - pip install pipenv
    - pipenv install --dev --deploy --system
  script:
    - python setup.py docs

pages:
  image: "python:3.6"
  before_script:
    - pip install pipenv
    - pipenv install --dev --deploy --system
  script:
    - python setup.py docs
    - mv build/sphinx/html/ public/
  artifacts:
    paths:
      - public
  only:
    - master

# This deploy job uses a simple deploy flow to Heroku, other providers, e.g. AWS Elastic Beanstalk
# are supported too: https://github.com/travis-ci/dpl
#deploy:
#  type: deploy
#  environment: production
#  script:
#  - python setup.py
#  - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
