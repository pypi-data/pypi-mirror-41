Metadata-Version: 1.1
Name: nibetaseries
Version: 0.2.3
Summary: BetaSeries Correlations implemented in Nipype
Home-page: https://github.com/HBClab/NiBetaSeries
Author: James Kent
Author-email: james-kent@uiowa.edu
License: MIT license
Description: ============
        NiBetaSeries
        ============
        
        
        
        NiBetaSeries is `BIDS <http://bids.neuroimaging.io/>`_ compatible `application <https://bids-apps.neuroimaging.io/>`_
        that calculates betaseries correlations.
        In brief, a beta coefficient is calculated for each trial
        (or event) resulting in a series of betas
        that can be used to correlate regions of interest with each other.
        
        NiBetaSeries takes preprocessed data as input that satisfy the
        `BIDS deriviatives specification <http://bit.ly/2vKeKcp>`_.
        In practical terms, NiBetaSeries uses the output of `fmriprep <http://fmriprep.readthedocs.io/en/latest/>`_,
        a great BIDS compatible preprocessing tool.
        NiBetaSeries requires the input and the atlas to already
        be in MNI space since currently no
        transformations are applied to the data.
        You can use any arbitrary atlas as long as it is in MNI space
        (the same space as the preprocessed data).
        
        With NiBetaSeries you can receive:
        
        * betaseries images (TODO)
        * correlation matrices
        
        This is a very young project that still needs some tender loving care to grow.
        That's where you fit in!
        If you would like to contribute, please read our code of conduct
        and contributing page.
        
        This project heavily leverages `nipype <http://nipype.readthedocs.io/en/latest/>`_,
        `nilearn <https://nilearn.github.io/>`_, `pybids <https://bids-standard.github.io/pybids/>`_, and
        `nistats <https://nistats.github.io/>`_ for development.
        Please check out their pages and support the developers.
        
        
        * Free software: MIT license
        
        Installation
        ============
        
        ::
        
            pip install nibetaseries
        
        Documentation
        =============
        
        https://nibetaseries.readthedocs.io
        
        If you're interested in contributing to this project, here are some guidelines for `contributing <https://hbclab.github.io/NiBetaSeries/contributing.html>`_.
        Another good place to start is by checking out the open `issues <https://github.com/HBClab/NiBetaSeries/issues>`_.
        
        Development
        ===========
        
        To run the all tests run::
        
            tox
        
        Note, to combine the coverage data from all the tox environments run:
        
        .. list-table::
            :widths: 10 90
            :stub-columns: 1
        
            - - Windows
              - ::
        
                    set PYTEST_ADDOPTS=--cov-append
                    tox
        
            - - Other
              - ::
        
                    PYTEST_ADDOPTS=--cov-append tox
        
        0.2.3 (January 29, 2019)
        ========================
        
        Various documentation and testing changes. 
        We will be using readthedocs going forward and not doctr.
        
        * [FIX] Remove high_pass references from documentation (#90) @RaginSagan
        * [FIX] Update betaseries.rst (#91) @ilkayisik
        * [ENH] autogenerate test data (#93) @jdkent
        * [FIX] add codecov back into testing (#94) @jdkent
        * [FIX] refactor dependencies (#95) @jdkent
        * [ENH] add example (#99) @jdkent
        * [FIX] first pass at configuring doctr (#100) @jdkent
        * [FIX] configure doctr (#101) @jdkent
        * [FIX] track version with docs (#102) @jdkent
        * [ENH] add sphinx versioning (#104) @jdkent
        * [FIX] first pass at simplifying example (#106) @jdkent
        * [FIX] add master back in to docs (#107) @jdkent
        * [MAINT] use readthedocs (#109) @jdkent
        * [DOC] add explicit download instruction (#112) @jdkent
        * [FIX] add graphviz as dependency for building docs (#115) @jdkent
        * [FIX] remove redundant/irrelevant doc building options (#116) @jdkent
        * [DOC] fix links in docs (#114) @PeerHerholz
        * [FIX,MAINT] rm 3.4 and test add 3.7 (#121) @jdkent
        * [FIX] pybids link (#120) @PeerHerholz
        * [FIX] syntax links (#119) @PeerHerholz
        
        0.2.2 (November 15, 2018)
        =========================
        
        Quick bug fixes, one related to updating the
        nipype dependency to a newer version (1.1.5)
        
        * [ENH] add nthreads option and make multiproc the default (#81) @jdkent
        * [FIX] add missing comma in hrf_models (#83) @jdkent
        
        0.2.1 (November 13, 2018)
        =========================
        
        Large thanks to everyone at neurohackademy that helped make this a reality.
        This release is still a bit premature because I'm testing out
        my workflow for making releases.
        
        * [ENH] Add link to Zenodo DOI (#57) @kdestasio
        * [ENH] run versioneer install (#60) @jdkent
        * [FIX] connect derivative outputs (#61) @jdkent
        * [FIX] add CODEOWNERS file (#63) @jdkent
        * [FIX] Fix pull request template (#65) @kristianeschenburg
        * [ENH]Update CONTRIBUTING.rst (#66) @PeerHerholz
        * [FIX] ignore sourcedata and derivatives directories in layout (#69) @jdkent
        * [DOC] Added zenodo file (#70) @ctoroserey
        * [FIX] file logic (#71) @jdkent
        * [FIX] confound removal (#72) @jdkent
        * [FIX] Find metadata (#74) @jdkent
        * [FIX] various fixes for a real dataset (#75) @jdkent
        * [ENH] allow confounds to be none (#76) @jdkent
        * [ENH] Reword docs (#77) @jdkent
        * [TST] Add more tests (#78) @jdkent
        * [MGT] simplify and create deployment (#79) @jdkent
        
        0.2.0 (November 13, 2018)
        =========================
        
        * [MGT] simplify and create deployment (#79)
        * [TST] Add more tests (#78)
        * [ENH] Reword docs (#77)
        * [ENH]: allow confounds to be none (#76)
        * various fixes for a real dataset (#75)
        * [FIX]: Find metadata (#74)
        * [FIX] confound removal (#72)
        * [WIP, FIX]: file logic (#71)
        * [DOC] Added zenodo file (#70)
        * [FIX]: ignore sourcedata and derivatives directories in layout (#69)
        * Update CONTRIBUTING.rst (#66)
        * Fix pull request template (#65)
        * FIX: add CODEOWNERS file (#63)
        * FIX: connect derivative outputs (#61)
        * run versioneer install (#60)
        * Fix issue #29: Add link to Zenodo DOI (#57)
        * Fix issue #45: conform colors of labels (#56)
        * fix links in readme.rst (#55)
        * Added code of conduct (#53)
        * Add link to contributing in README (#52)
        * removed acknowledgments section of pull request template (#50)
        * [TST]: Add functional test (#49)
        * [FIX]: remove references to bootstrap (#48)
        * FIX: test remove base .travis.yml (#47)
        * removed data directory (#40)
        * Add pull request template (#41)
        * Update issue templates (#44)
        * Update contributing (#43)
        * README (where's the beef?) (#37)
        * change jdkent to HBClab (#38)
        * [FIX]: pass tests (#14)
        * [ENH]: improve docs (#13)
        * add documentation (#11)
        * FIX: add graph (#10)
        * Refactor NiBetaSeries (#9)
        * Refactor (#2)
        
        
        0.1.0 (2018-06-08)
        ==================
        
        * First release on PyPI.
        
Keywords: bids,fmri,neuroimaging
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Utilities
