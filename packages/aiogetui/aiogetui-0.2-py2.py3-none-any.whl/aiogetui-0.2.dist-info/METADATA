Metadata-Version: 2.1
Name: aiogetui
Version: 0.2
Summary: Python SDK for Getui push service based on asyncio(aiohttp).
Home-page: https://github.com/charact3/aiogetui
Author: Darren Char
Author-email: i@charact3.com
License: MIT
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
Requires-Dist: six
Requires-Dist: aiohttp (<4.0,>3.0)


# aiogetui
Python SDK for Getui push service based on asyncio(aiohttp).
Based on [GeTui rest api](http://docs.getui.com/getui/server/rest/push/).

## Installation
```bash
$ pip install aiogetui
```

## Basic Usage
```python
import asyncio
import uuid
from aiogetui import IGeTui, ToSingleMessage, NotificationTemplate

APP_ID = ''
APP_KEY = ''
MASTER_SECRET = ''
CLIENT_ID = ''


async def run():
    client = IGeTui(APP_ID, APP_KEY, MASTER_SECRET)
    await client.auth_sign()
    message = ToSingleMessage(client_id=CLIENT_ID,
                              template=NotificationTemplate(
                                  {
                                      'title': 'my title',
                                      'text': 'My text.',
                                  }),
                              is_offline=True,  # optional, default to False
                              message_id=uuid.uuid4().hex,  # optional, length 10~32
    )
    _result = await client.push(message)
    await client.close()
    return _result

result = asyncio.get_event_loop().run_until_complete(run())
print(result)
```


