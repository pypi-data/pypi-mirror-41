# Generated by Django 2.0.6 on 2018-08-18 07:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.ACCOUNT_USER_PROXY_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssociateMasterList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('has_errors', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.ACCOUNT_USER_PROXY_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutoDialerList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('phone_friendly_number', models.CharField(blank=True, help_text='Phone Number in nice format', max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, editable=False, help_text='Phone number without spaces, dashes, or non-numeric characters.', max_length=25, null=True)),
                ('phone_status', models.CharField(blank=True, choices=[('connected', 'Always connected'), ('connected-75', 'Connected 75% of the time'), ('pending', 'Not completed yet'), ('disconnected', 'Always disconnected'), ('disconnected-85', 'Disconnected 85% of the time'), ('disconnected-70', 'Disconnected 70% of the time'), ('disconnected-50', 'Disconnected 50% of the time'), ('busy', 'Busy'), ('unreachable', 'Not reachable'), ('invalid phone', 'Phone not valid'), ('restricted', 'Cant be dialed'), ('ERROR', 'bad phone number'), ('invalid-format', 'phone or zip are not in a valid format'), ('invalid-phone', 'phone number is not valid'), ('bad-zip-code', 'zip code is not valid'), ('server-unavailable', 'contact support')], default=None, max_length=50, null=True)),
                ('phone_type', models.CharField(blank=True, choices=[('landline', 'Landline'), ('cell-phone', 'Cell Phone'), ('voip', 'Voip'), ('invalid', 'Invalid'), ('unknown', 'Unknown')], default='', max_length=10, null=True)),
                ('phone_carrier', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('phone_cname', models.CharField(blank=True, default='', help_text='The caller ID of the phone', max_length=100, null=True)),
                ('is_valid', models.BooleanField()),
                ('msg_err', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('associated_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='click_to_call.AssociateMasterList')),
            ],
        ),
        migrations.CreateModel(
            name='CallHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dialed_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('call_duration_in_seconds', models.IntegerField(default=0)),
                ('number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='click_to_call.AutoDialerList')),
            ],
        ),
        migrations.CreateModel(
            name='RealPhoneValidation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(editable=False, help_text='Phone number without spaces, dashes, or non-numeric characters.', max_length=25)),
                ('phone_country_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone_friendly_number', models.CharField(blank=True, help_text='Phone Number in nice format', max_length=255, null=True)),
                ('phone_status', models.CharField(blank=True, choices=[('connected', 'Always connected'), ('connected-75', 'Connected 75% of the time'), ('pending', 'Not completed yet'), ('disconnected', 'Always disconnected'), ('disconnected-85', 'Disconnected 85% of the time'), ('disconnected-70', 'Disconnected 70% of the time'), ('disconnected-50', 'Disconnected 50% of the time'), ('busy', 'Busy'), ('unreachable', 'Not reachable'), ('invalid phone', 'Phone not valid'), ('restricted', 'Cant be dialed'), ('ERROR', 'bad phone number'), ('invalid-format', 'phone or zip are not in a valid format'), ('invalid-phone', 'phone number is not valid'), ('bad-zip-code', 'zip code is not valid'), ('server-unavailable', 'contact support')], default=None, max_length=50, null=True)),
                ('phone_type', models.CharField(blank=True, choices=[('landline', 'Landline'), ('cell-phone', 'Cell Phone'), ('voip', 'Voip'), ('invalid', 'Invalid'), ('unknown', 'Unknown')], default='', max_length=10, null=True)),
                ('phone_carrier', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('phone_cname', models.CharField(blank=True, default='', help_text='Caller ID', max_length=100, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('error_text', models.TextField(blank=True, default='', max_length=500, null=True)),
            ],
        ),
    ]
