#!/usr/bin/env condor_submit
accounting_group = ligo.dev.o2.cbc.pe.bayestar
accounting_group_user = leo.singer
universe = local
getenv = true
environment = "CELERY_BROKER_URL=redis+socket://$ENV(PWD)/redis.sock"
executable = /usr/bin/env
on_exit_remove = false
JobBatchName = gwcelery

arguments = "redis-server --port 0 --unixsocket redis.sock --unixsocketperm 700"
description = redis-server
error = gwcelery-redis-server.err
log = gwcelery-redis-server.log
output = gwcelery-redis-server.out
queue

arguments = "gwcelery beat"
description = gwcelery-beat
error = gwcelery-beat.err
log = gwcelery-beat.log
output = gwcelery-beat.out
queue

arguments = "gwcelery worker -l info -n gwcelery-worker -Q celery"
description = gwcelery-worker
error = gwcelery-worker.err
log = gwcelery-worker.log
output = gwcelery-worker.out
queue

arguments = "gwcelery worker -l info -n gwcelery-openmp-worker -Q openmp -c 1"
description = gwcelery-openmp-worker
error = gwcelery-openmp-worker.err
log = gwcelery-openmp-worker.log
output = gwcelery-openmp-worker.out
queue

arguments = "gwcelery worker -l info -n gwcelery-exttrig-worker -Q exttrig -c 1"
description = gwcelery-exttrig-worker
error = gwcelery-exttrig-worker.err
log = gwcelery-exttrig-worker.log
output = gwcelery-exttrig-worker.out
queue

arguments = "gwcelery worker -l info -n gwcelery-superevent-worker -Q superevent -c 1"
description = gwcelery-superevent-worker
error = gwcelery-superevent-worker.err
log = gwcelery-superevent-worker.log
output = gwcelery-superevent-worker.out
queue

arguments = "gwcelery flower --url-prefix=~$ENV(USER)/gwcelery"
description = gwcelery-flower
error = gwcelery-flower.err
log = gwcelery-flower.log
output = gwcelery-flower.out
queue
