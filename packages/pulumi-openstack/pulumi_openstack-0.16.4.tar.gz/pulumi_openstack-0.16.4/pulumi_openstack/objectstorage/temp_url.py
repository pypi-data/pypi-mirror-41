# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class TempUrl(pulumi.CustomResource):
    container: pulumi.Output[str]
    """
    The container name the object belongs to.
    """
    method: pulumi.Output[str]
    """
    The method allowed when accessing this URL.
    Valid values are `GET`, and `POST`. Default is `GET`.
    """
    object: pulumi.Output[str]
    """
    The object name the tempurl is for.
    """
    regenerate: pulumi.Output[bool]
    """
    Whether to automatically regenerate the URL when
    it has expired. If set to true, this will create a new resource with a new
    ID and new URL. Defaults to false.
    """
    region: pulumi.Output[str]
    """
    The region the tempurl is located in.
    """
    split: pulumi.Output[str]
    ttl: pulumi.Output[int]
    """
    The TTL, in seconds, for the URL. For how long it should
    be valid.
    """
    url: pulumi.Output[str]
    """
    The URL
    """
    def __init__(__self__, __name__, __opts__=None, container=None, method=None, object=None, regenerate=None, region=None, split=None, ttl=None):
        """
        Use this resource to generate an OpenStack Object Storage temporary URL.
        
        The temporary URL will be valid for as long as TTL is set to (in seconds).
        Once the URL has expired, it will no longer be valid, but the resource
        will remain in place. If you wish to automatically regenerate a URL, set
        the `regenerate` argument to `true`. This will create a new resource with
        a new ID and URL.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] container: The container name the object belongs to.
        :param pulumi.Input[str] method: The method allowed when accessing this URL.
               Valid values are `GET`, and `POST`. Default is `GET`.
        :param pulumi.Input[str] object: The object name the tempurl is for.
        :param pulumi.Input[bool] regenerate: Whether to automatically regenerate the URL when
               it has expired. If set to true, this will create a new resource with a new
               ID and new URL. Defaults to false.
        :param pulumi.Input[str] region: The region the tempurl is located in.
        :param pulumi.Input[str] split
        :param pulumi.Input[int] ttl: The TTL, in seconds, for the URL. For how long it should
               be valid.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not container:
            raise TypeError('Missing required property container')
        __props__['container'] = container

        __props__['method'] = method

        if not object:
            raise TypeError('Missing required property object')
        __props__['object'] = object

        __props__['regenerate'] = regenerate

        __props__['region'] = region

        __props__['split'] = split

        if not ttl:
            raise TypeError('Missing required property ttl')
        __props__['ttl'] = ttl

        __props__['url'] = None

        super(TempUrl, __self__).__init__(
            'openstack:objectstorage/tempUrl:TempUrl',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

