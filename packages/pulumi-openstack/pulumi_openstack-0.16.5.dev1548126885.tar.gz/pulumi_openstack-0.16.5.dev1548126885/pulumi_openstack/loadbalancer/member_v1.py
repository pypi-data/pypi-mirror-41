# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class MemberV1(pulumi.CustomResource):
    address: pulumi.Output[str]
    """
    The IP address of the member. Changing this creates a
    new member.
    """
    admin_state_up: pulumi.Output[bool]
    """
    The administrative state of the member.
    Acceptable values are 'true' and 'false'. Changing this value updates the
    state of the existing member.
    """
    pool_id: pulumi.Output[str]
    """
    The ID of the LB pool. Changing this creates a new
    member.
    """
    port: pulumi.Output[int]
    """
    An integer representing the port on which the member is
    hosted. Changing this creates a new member.
    """
    region: pulumi.Output[str]
    """
    The region in which to obtain the V2 Networking client.
    A Networking client is needed to create an LB member. If omitted, the
    `region` argument of the provider is used. Changing this creates a new
    LB member.
    """
    tenant_id: pulumi.Output[str]
    """
    The owner of the member. Required if admin wants to
    create a member for another tenant. Changing this creates a new member.
    """
    weight: pulumi.Output[int]
    """
    The load balancing weight of the member. This is currently unable
    to be set through Terraform.
    """
    def __init__(__self__, __name__, __opts__=None, address=None, admin_state_up=None, pool_id=None, port=None, region=None, tenant_id=None, weight=None):
        """
        Manages a V1 load balancer member resource within OpenStack.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] address: The IP address of the member. Changing this creates a
               new member.
        :param pulumi.Input[bool] admin_state_up: The administrative state of the member.
               Acceptable values are 'true' and 'false'. Changing this value updates the
               state of the existing member.
        :param pulumi.Input[str] pool_id: The ID of the LB pool. Changing this creates a new
               member.
        :param pulumi.Input[int] port: An integer representing the port on which the member is
               hosted. Changing this creates a new member.
        :param pulumi.Input[str] region: The region in which to obtain the V2 Networking client.
               A Networking client is needed to create an LB member. If omitted, the
               `region` argument of the provider is used. Changing this creates a new
               LB member.
        :param pulumi.Input[str] tenant_id: The owner of the member. Required if admin wants to
               create a member for another tenant. Changing this creates a new member.
        :param pulumi.Input[int] weight: The load balancing weight of the member. This is currently unable
               to be set through Terraform.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not address:
            raise TypeError('Missing required property address')
        __props__['address'] = address

        __props__['admin_state_up'] = admin_state_up

        if not pool_id:
            raise TypeError('Missing required property pool_id')
        __props__['pool_id'] = pool_id

        if not port:
            raise TypeError('Missing required property port')
        __props__['port'] = port

        __props__['region'] = region

        __props__['tenant_id'] = tenant_id

        __props__['weight'] = weight

        super(MemberV1, __self__).__init__(
            'openstack:loadbalancer/memberV1:MemberV1',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

