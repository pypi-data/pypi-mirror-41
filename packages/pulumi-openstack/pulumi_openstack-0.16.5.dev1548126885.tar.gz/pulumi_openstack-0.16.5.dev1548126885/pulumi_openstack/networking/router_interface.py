# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class RouterInterface(pulumi.CustomResource):
    port_id: pulumi.Output[str]
    """
    ID of the port this interface connects to. Changing
    this creates a new router interface.
    """
    region: pulumi.Output[str]
    """
    The region in which to obtain the V2 networking client.
    A networking client is needed to create a router. If omitted, the
    `region` argument of the provider is used. Changing this creates a new
    router interface.
    """
    router_id: pulumi.Output[str]
    """
    ID of the router this interface belongs to. Changing
    this creates a new router interface.
    """
    subnet_id: pulumi.Output[str]
    """
    ID of the subnet this interface connects to. Changing
    this creates a new router interface.
    """
    def __init__(__self__, __name__, __opts__=None, port_id=None, region=None, router_id=None, subnet_id=None):
        """
        Manages a V2 router interface resource within OpenStack.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] port_id: ID of the port this interface connects to. Changing
               this creates a new router interface.
        :param pulumi.Input[str] region: The region in which to obtain the V2 networking client.
               A networking client is needed to create a router. If omitted, the
               `region` argument of the provider is used. Changing this creates a new
               router interface.
        :param pulumi.Input[str] router_id: ID of the router this interface belongs to. Changing
               this creates a new router interface.
        :param pulumi.Input[str] subnet_id: ID of the subnet this interface connects to. Changing
               this creates a new router interface.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['port_id'] = port_id

        __props__['region'] = region

        if not router_id:
            raise TypeError('Missing required property router_id')
        __props__['router_id'] = router_id

        __props__['subnet_id'] = subnet_id

        super(RouterInterface, __self__).__init__(
            'openstack:networking/routerInterface:RouterInterface',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

