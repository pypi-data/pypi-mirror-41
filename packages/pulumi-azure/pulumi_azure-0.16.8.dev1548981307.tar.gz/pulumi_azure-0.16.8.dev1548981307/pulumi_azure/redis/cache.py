# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Cache(pulumi.CustomResource):
    capacity: pulumi.Output[int]
    """
    The size of the Redis cache to deploy. Valid values for a SKU `family` of C (Basic/Standard) are `0, 1, 2, 3, 4, 5, 6`, and for P (Premium) `family` are `1, 2, 3, 4`.
    """
    enable_non_ssl_port: pulumi.Output[bool]
    """
    Enable the non-SSL port (6789) - disabled by default.
    """
    family: pulumi.Output[str]
    """
    The SKU family to use. Valid values are `C` and `P`, where C = Basic/Standard, P = Premium.
    """
    hostname: pulumi.Output[str]
    """
    The Hostname of the Redis Instance
    """
    location: pulumi.Output[str]
    """
    The location of the resource group.
    """
    name: pulumi.Output[str]
    """
    The name of the Redis instance. Changing this forces a
    new resource to be created.
    """
    patch_schedules: pulumi.Output[list]
    """
    A list of `patch_schedule` blocks as defined below - only available for Premium SKU's.
    """
    port: pulumi.Output[int]
    """
    The non-SSL Port of the Redis Instance
    """
    primary_access_key: pulumi.Output[str]
    """
    The Primary Access Key for the Redis Instance
    """
    private_static_ip_address: pulumi.Output[str]
    """
    The Static IP Address to assign to the Redis Cache when hosted inside the Virtual Network. Changing this forces a new resource to be created.
    """
    redis_configuration: pulumi.Output[dict]
    """
    A `redis_configuration` as defined below - with some limitations by SKU - defaults/details are shown below.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the resource group in which to
    create the Redis instance.
    """
    secondary_access_key: pulumi.Output[str]
    """
    The Secondary Access Key for the Redis Instance
    """
    shard_count: pulumi.Output[int]
    """
    *Only available when using the Premium SKU* The number of Shards to create on the Redis Cluster.
    """
    sku_name: pulumi.Output[str]
    """
    The SKU of Redis to use - can be either Basic, Standard or Premium.
    """
    ssl_port: pulumi.Output[int]
    """
    The SSL Port of the Redis Instance
    """
    subnet_id: pulumi.Output[str]
    """
    The ID of the Subnet within which the Redis Cache should be deployed. Changing this forces a new resource to be created.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    zones: pulumi.Output[str]
    """
    A list of a single item of the Availability Zone which the Redis Cache should be allocated in.
    """
    def __init__(__self__, __name__, __opts__=None, capacity=None, enable_non_ssl_port=None, family=None, location=None, name=None, patch_schedules=None, private_static_ip_address=None, redis_configuration=None, resource_group_name=None, shard_count=None, sku_name=None, subnet_id=None, tags=None, zones=None):
        """
        Manages a Redis Cache.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[int] capacity: The size of the Redis cache to deploy. Valid values for a SKU `family` of C (Basic/Standard) are `0, 1, 2, 3, 4, 5, 6`, and for P (Premium) `family` are `1, 2, 3, 4`.
        :param pulumi.Input[bool] enable_non_ssl_port: Enable the non-SSL port (6789) - disabled by default.
        :param pulumi.Input[str] family: The SKU family to use. Valid values are `C` and `P`, where C = Basic/Standard, P = Premium.
        :param pulumi.Input[str] location: The location of the resource group.
        :param pulumi.Input[str] name: The name of the Redis instance. Changing this forces a
               new resource to be created.
        :param pulumi.Input[list] patch_schedules: A list of `patch_schedule` blocks as defined below - only available for Premium SKU's.
        :param pulumi.Input[str] private_static_ip_address: The Static IP Address to assign to the Redis Cache when hosted inside the Virtual Network. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] redis_configuration: A `redis_configuration` as defined below - with some limitations by SKU - defaults/details are shown below.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to
               create the Redis instance.
        :param pulumi.Input[int] shard_count: *Only available when using the Premium SKU* The number of Shards to create on the Redis Cluster.
        :param pulumi.Input[str] sku_name: The SKU of Redis to use - can be either Basic, Standard or Premium.
        :param pulumi.Input[str] subnet_id: The ID of the Subnet within which the Redis Cache should be deployed. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] zones: A list of a single item of the Availability Zone which the Redis Cache should be allocated in.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not capacity:
            raise TypeError('Missing required property capacity')
        __props__['capacity'] = capacity

        __props__['enable_non_ssl_port'] = enable_non_ssl_port

        if not family:
            raise TypeError('Missing required property family')
        __props__['family'] = family

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        __props__['patch_schedules'] = patch_schedules

        __props__['private_static_ip_address'] = private_static_ip_address

        if not redis_configuration:
            raise TypeError('Missing required property redis_configuration')
        __props__['redis_configuration'] = redis_configuration

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['shard_count'] = shard_count

        if not sku_name:
            raise TypeError('Missing required property sku_name')
        __props__['sku_name'] = sku_name

        __props__['subnet_id'] = subnet_id

        __props__['tags'] = tags

        __props__['zones'] = zones

        __props__['hostname'] = None
        __props__['port'] = None
        __props__['primary_access_key'] = None
        __props__['secondary_access_key'] = None
        __props__['ssl_port'] = None

        super(Cache, __self__).__init__(
            'azure:redis/cache:Cache',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

