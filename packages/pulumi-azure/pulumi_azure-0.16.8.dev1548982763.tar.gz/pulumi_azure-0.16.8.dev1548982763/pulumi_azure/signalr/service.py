# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Service(pulumi.CustomResource):
    hostname: pulumi.Output[str]
    ip_address: pulumi.Output[str]
    location: pulumi.Output[str]
    name: pulumi.Output[str]
    public_port: pulumi.Output[int]
    resource_group_name: pulumi.Output[str]
    server_port: pulumi.Output[int]
    sku: pulumi.Output[dict]
    tags: pulumi.Output[dict]
    def __init__(__self__, __name__, __opts__=None, location=None, name=None, resource_group_name=None, sku=None, tags=None):
        """
        Create a Service resource with the given unique name, props, and options.
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] location
        :param pulumi.Input[str] name
        :param pulumi.Input[str] resource_group_name
        :param pulumi.Input[dict] sku
        :param pulumi.Input[dict] tags
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        if not sku:
            raise TypeError('Missing required property sku')
        __props__['sku'] = sku

        __props__['tags'] = tags

        __props__['hostname'] = None
        __props__['ip_address'] = None
        __props__['public_port'] = None
        __props__['server_port'] = None

        super(Service, __self__).__init__(
            'azure:signalr/service:Service',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

