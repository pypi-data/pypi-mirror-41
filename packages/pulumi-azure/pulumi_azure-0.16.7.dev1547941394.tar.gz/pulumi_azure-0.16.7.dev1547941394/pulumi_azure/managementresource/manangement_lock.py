# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class ManangementLock(pulumi.CustomResource):
    lock_level: pulumi.Output[str]
    """
    Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str]
    """
    Specifies the name of the Management Lock. Changing this forces a new resource to be created.
    """
    notes: pulumi.Output[str]
    """
    Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
    """
    scope: pulumi.Output[str]
    """
    Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
    """
    def __init__(__self__, __name__, __opts__=None, lock_level=None, name=None, notes=None, scope=None):
        """
        Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] lock_level: Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the Management Lock. Changing this forces a new resource to be created.
        :param pulumi.Input[str] notes: Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
        :param pulumi.Input[str] scope: Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not lock_level:
            raise TypeError('Missing required property lock_level')
        __props__['lock_level'] = lock_level

        __props__['name'] = name

        __props__['notes'] = notes

        if not scope:
            raise TypeError('Missing required property scope')
        __props__['scope'] = scope

        super(ManangementLock, __self__).__init__(
            'azure:managementresource/manangementLock:ManangementLock',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

