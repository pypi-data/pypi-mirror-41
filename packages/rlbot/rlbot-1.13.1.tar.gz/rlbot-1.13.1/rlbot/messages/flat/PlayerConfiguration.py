# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flat

import flatbuffers

class PlayerConfiguration(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPlayerConfiguration(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PlayerConfiguration()
        x.Init(buf, n + offset)
        return x

    # PlayerConfiguration
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PlayerConfiguration
    def IsBot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def IsRLBotControlled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def BotSkill(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # PlayerConfiguration
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # PlayerConfiguration
    def Team(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def TeamColorId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def CustomColorId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def CarId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def DecalId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def WheelsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def BoostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def AntennaId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def HatId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def PaintFinishId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def CustomFinishId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def EngineAudioId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def TrailsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def GoalExplosionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def CarPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def DecalPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def WheelsPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def BoostPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def AntennaPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def HatPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def TrailsPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PlayerConfiguration
    def GoalExplosionPaintId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def PlayerConfigurationStart(builder): builder.StartObject(26)
def PlayerConfigurationAddIsBot(builder, isBot): builder.PrependBoolSlot(0, isBot, 0)
def PlayerConfigurationAddIsRLBotControlled(builder, isRLBotControlled): builder.PrependBoolSlot(1, isRLBotControlled, 0)
def PlayerConfigurationAddBotSkill(builder, botSkill): builder.PrependFloat32Slot(2, botSkill, 0.0)
def PlayerConfigurationAddName(builder, name): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def PlayerConfigurationAddTeam(builder, team): builder.PrependUint8Slot(4, team, 0)
def PlayerConfigurationAddTeamColorId(builder, teamColorId): builder.PrependInt32Slot(5, teamColorId, 0)
def PlayerConfigurationAddCustomColorId(builder, customColorId): builder.PrependInt32Slot(6, customColorId, 0)
def PlayerConfigurationAddCarId(builder, carId): builder.PrependInt32Slot(7, carId, 0)
def PlayerConfigurationAddDecalId(builder, decalId): builder.PrependInt32Slot(8, decalId, 0)
def PlayerConfigurationAddWheelsId(builder, wheelsId): builder.PrependInt32Slot(9, wheelsId, 0)
def PlayerConfigurationAddBoostId(builder, boostId): builder.PrependInt32Slot(10, boostId, 0)
def PlayerConfigurationAddAntennaId(builder, antennaId): builder.PrependInt32Slot(11, antennaId, 0)
def PlayerConfigurationAddHatId(builder, hatId): builder.PrependInt32Slot(12, hatId, 0)
def PlayerConfigurationAddPaintFinishId(builder, paintFinishId): builder.PrependInt32Slot(13, paintFinishId, 0)
def PlayerConfigurationAddCustomFinishId(builder, customFinishId): builder.PrependInt32Slot(14, customFinishId, 0)
def PlayerConfigurationAddEngineAudioId(builder, engineAudioId): builder.PrependInt32Slot(15, engineAudioId, 0)
def PlayerConfigurationAddTrailsId(builder, trailsId): builder.PrependInt32Slot(16, trailsId, 0)
def PlayerConfigurationAddGoalExplosionId(builder, goalExplosionId): builder.PrependInt32Slot(17, goalExplosionId, 0)
def PlayerConfigurationAddCarPaintId(builder, carPaintId): builder.PrependInt32Slot(18, carPaintId, 0)
def PlayerConfigurationAddDecalPaintId(builder, decalPaintId): builder.PrependInt32Slot(19, decalPaintId, 0)
def PlayerConfigurationAddWheelsPaintId(builder, wheelsPaintId): builder.PrependInt32Slot(20, wheelsPaintId, 0)
def PlayerConfigurationAddBoostPaintId(builder, boostPaintId): builder.PrependInt32Slot(21, boostPaintId, 0)
def PlayerConfigurationAddAntennaPaintId(builder, antennaPaintId): builder.PrependInt32Slot(22, antennaPaintId, 0)
def PlayerConfigurationAddHatPaintId(builder, hatPaintId): builder.PrependInt32Slot(23, hatPaintId, 0)
def PlayerConfigurationAddTrailsPaintId(builder, trailsPaintId): builder.PrependInt32Slot(24, trailsPaintId, 0)
def PlayerConfigurationAddGoalExplosionPaintId(builder, goalExplosionPaintId): builder.PrependInt32Slot(25, goalExplosionPaintId, 0)
def PlayerConfigurationEnd(builder): return builder.EndObject()
