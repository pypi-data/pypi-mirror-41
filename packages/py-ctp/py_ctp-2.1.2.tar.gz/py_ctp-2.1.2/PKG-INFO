Metadata-Version: 2.1
Name: py_ctp
Version: 2.1.2
Summary: Python CTP futures api
Home-page: https://github.com/haifengat/hf_ctp_py_proxy
Author: HaiFeng
Author-email: haifengat@vip.qq.com
License: MIT License
Description: # py_ctp
        
        上期技术期货交易api之python封装，实现接口调用。支持windows(x86/x64) linux(x64).
        
        #### 示例
        
        ```python
        #!/usr/bin/env python
        # -*- coding: utf-8 -*-
        __title__ = 'py_ctp'
        __author__ = 'HaiFeng'
        __mtime__ = '20181216'
        
        from py_ctp.trade import CtpTrade
        from py_ctp.quote import CtpQuote
        import time
        
        
        class TestTrade(object):
            def __init__(self):
                self.t = CtpTrade()
                self.t.OnConnected = lambda x: self.t.ReqUserLogin('008107', '1', '9999')
                # self.t.OnUserLogin = lambda o, x: print(x)
                # self.t.OnDisConnected = self.disconnected
                # self.t.OnRtnNotice = lambda obj, time, msg: print(f'OnNotice: {time}:{msg}')
                # self.t.OnErrRtnQuote = lambda obj, quote, info: None
                # self.t.OnErrRtnQuoteInsert = lambda obj, o: None
                # self.t.OnOrder = lambda obj, o: None
                # self.t.OnErrOrder = lambda obj, f, info: None
                # self.t.OnTrade = lambda obj, o: None
                # self.t.OnInstrumentStatus = lambda obj, inst, stat: None
        
            def run(self):
                self.t.ReqConnect('tcp://180.168.146.187:10000')
                # self.t.ReqConnect('tcp://192.168.52.4:41205')
        
            def release(self):
                self.t.ReqUserLogout()
        
        
        class TestQuote(object):
            """TestQuote"""
        
            def __init__(self):
                """"""
                self.q = CtpQuote()
                self.q.OnConnected = lambda x: self.q.ReqUserLogin('008107', '1', '9999')
        
            def run(self):
                self.q.ReqConnect('tcp://180.168.146.187:10010')
        
            def release(self):
                self.q.ReqUserLogout()
        
        
        if __name__ == "__main__":
            tt = TestTrade()
            # t.OnConnected = t.ReqUserLogin('008105', '1', '9999')
            # t.ReqConnect('tcp://180.168.146.187:10000')
            tt.run()
        
            qq = TestQuote()
            qq.run()
        
            # time.sleep(6)
            # for inst in tt.t.instruments.values():
            #     print(inst)
            input()
            tt.release()
            qq.release()
            input()
        
        ```
Platform: any
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.4.0
Description-Content-Type: text/markdown
