{"batchPath": "batch", "fullyEncodeReservedExpansion": true, "title": "IAM Service Account Credentials API", "ownerName": "Google", "resources": {"projects": {"resources": {"serviceAccounts": {"methods": {"generateIdentityBindingAccessToken": {"flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:generateIdentityBindingAccessToken", "path": "v1/{+name}:generateIdentityBindingAccessToken", "id": "iamcredentials.projects.serviceAccounts.generateIdentityBindingAccessToken", "description": "", "request": {"$ref": "GenerateIdentityBindingAccessTokenRequest"}, "response": {"$ref": "GenerateIdentityBindingAccessTokenResponse"}, "parameterOrder": ["name"], "httpMethod": "POST", "parameters": {"name": {"description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.", "required": true, "type": "string", "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$", "location": "path"}}}, "generateAccessToken": {"response": {"$ref": "GenerateAccessTokenResponse"}, "parameterOrder": ["name"], "httpMethod": "POST", "parameters": {"name": {"description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.", "required": true, "type": "string", "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$", "location": "path"}}, "scopes": ["https://www.googleapis.com/auth/cloud-platform"], "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:generateAccessToken", "path": "v1/{+name}:generateAccessToken", "id": "iamcredentials.projects.serviceAccounts.generateAccessToken", "description": "Generates an OAuth 2.0 access token for a service account.", "request": {"$ref": "GenerateAccessTokenRequest"}}, "generateIdToken": {"id": "iamcredentials.projects.serviceAccounts.generateIdToken", "path": "v1/{+name}:generateIdToken", "description": "Generates an OpenID Connect ID token for a service account.", "request": {"$ref": "GenerateIdTokenRequest"}, "httpMethod": "POST", "parameterOrder": ["name"], "response": {"$ref": "GenerateIdTokenResponse"}, "parameters": {"name": {"pattern": "^projects/[^/]+/serviceAccounts/[^/]+$", "location": "path", "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.", "required": true, "type": "string"}}, "scopes": ["https://www.googleapis.com/auth/cloud-platform"], "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:generateIdToken"}, "signBlob": {"flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob", "path": "v1/{+name}:signBlob", "id": "iamcredentials.projects.serviceAccounts.signBlob", "request": {"$ref": "SignBlobRequest"}, "description": "Signs a blob using a service account's system-managed private key.", "response": {"$ref": "SignBlobResponse"}, "parameterOrder": ["name"], "httpMethod": "POST", "scopes": ["https://www.googleapis.com/auth/cloud-platform"], "parameters": {"name": {"description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.", "required": true, "type": "string", "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$", "location": "path"}}}, "signJwt": {"flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt", "path": "v1/{+name}:signJwt", "id": "iamcredentials.projects.serviceAccounts.signJwt", "description": "Signs a JWT using a service account's system-managed private key.", "request": {"$ref": "SignJwtRequest"}, "response": {"$ref": "SignJwtResponse"}, "parameterOrder": ["name"], "httpMethod": "POST", "parameters": {"name": {"pattern": "^projects/[^/]+/serviceAccounts/[^/]+$", "location": "path", "description": "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`.", "required": true, "type": "string"}}, "scopes": ["https://www.googleapis.com/auth/cloud-platform"]}}}}}}, "parameters": {"access_token": {"location": "query", "description": "OAuth access token.", "type": "string"}, "key": {"description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type": "string", "location": "query"}, "upload_protocol": {"location": "query", "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type": "string"}, "prettyPrint": {"location": "query", "description": "Returns response with indentations and line breaks.", "type": "boolean", "default": "true"}, "quotaUser": {"description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type": "string", "location": "query"}, "fields": {"location": "query", "description": "Selector specifying which fields to include in a partial response.", "type": "string"}, "uploadType": {"location": "query", "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type": "string"}, "callback": {"description": "JSONP", "type": "string", "location": "query"}, "oauth_token": {"location": "query", "description": "OAuth 2.0 token for the current user.", "type": "string"}, "$.xgafv": {"enumDescriptions": ["v1 error format", "v2 error format"], "location": "query", "enum": ["1", "2"], "description": "V1 error format.", "type": "string"}, "alt": {"description": "Data format for response.", "default": "json", "enum": ["json", "media", "proto"], "type": "string", "enumDescriptions": ["Responses with Content-Type of application/json", "Media download with context-dependent Content-Type", "Responses with Content-Type of application/x-protobuf"], "location": "query"}, "pp": {"type": "string", "location": "query"}, "strict": {"type": "string", "location": "query"}, "trace": {"type": "string", "location": "query"}}, "version": "v1", "baseUrl": "https://iamcredentials.googleapis.com/", "kind": "discovery#restDescription", "description": "Creates short-lived, limited-privilege credentials for IAM service accounts.", "servicePath": "", "basePath": "", "id": "iamcredentials:v1", "documentationLink": "https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials", "revision": "20190201", "discoveryVersion": "v1", "version_module": true, "schemas": {"SignJwtRequest": {"properties": {"delegates": {"description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`", "type": "array", "items": {"type": "string"}}, "payload": {"description": "The JWT payload to sign: a JSON object that contains a JWT Claims Set.", "type": "string"}}, "id": "SignJwtRequest", "type": "object"}, "GenerateIdTokenRequest": {"type": "object", "properties": {"includeEmail": {"description": "Include the service account email in the token. If set to `true`, the\ntoken will contain `email` and `email_verified` claims.", "type": "boolean"}, "delegates": {"description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`", "type": "array", "items": {"type": "string"}}, "audience": {"description": "The audience for the token, such as the API or account that this token\ngrants access to.", "type": "string"}}, "id": "GenerateIdTokenRequest"}, "GenerateIdTokenResponse": {"type": "object", "properties": {"token": {"description": "The OpenId Connect ID token.", "type": "string"}}, "id": "GenerateIdTokenResponse"}, "GenerateIdentityBindingAccessTokenResponse": {"type": "object", "properties": {"accessToken": {"description": "The OAuth 2.0 access token.", "type": "string"}, "expireTime": {"description": "Token expiration time.\nThe expiration time is always set.", "format": "google-datetime", "type": "string"}}, "id": "GenerateIdentityBindingAccessTokenResponse"}, "GenerateAccessTokenResponse": {"type": "object", "properties": {"accessToken": {"description": "The OAuth 2.0 access token.", "type": "string"}, "expireTime": {"description": "Token expiration time.\nThe expiration time is always set.", "format": "google-datetime", "type": "string"}}, "id": "GenerateAccessTokenResponse"}, "GenerateAccessTokenRequest": {"type": "object", "properties": {"scope": {"description": "Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.", "type": "array", "items": {"type": "string"}}, "delegates": {"description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`", "type": "array", "items": {"type": "string"}}, "lifetime": {"description": "The desired lifetime duration of the access token in seconds.\nMust be set to a value less than or equal to 3600 (1 hour). If a value is\nnot specified, the token's lifetime will be set to a default value of one\nhour.", "format": "google-duration", "type": "string"}}, "id": "GenerateAccessTokenRequest"}, "GenerateIdentityBindingAccessTokenRequest": {"type": "object", "properties": {"jwt": {"description": "Required. Input token.\nMust be in JWT format according to\nRFC7523 (https://tools.ietf.org/html/rfc7523)\nand must have 'kid' field in the header.\nSupported signing algorithms: RS256 (RS512, ES256, ES512 coming soon).\nMandatory payload fields (along the lines of RFC 7523, section 3):\n- iss: issuer of the token. Must provide a discovery document at\n       $iss/.well-known/openid-configuration . The document needs to be\n       formatted according to section 4.2 of the OpenID Connect Discovery\n       1.0 specification.\n- iat: Issue time in seconds since epoch. Must be in the past.\n- exp: Expiration time in seconds since epoch. Must be less than 48 hours\n       after iat. We recommend to create tokens that last shorter than 6\n       hours to improve security unless business reasons mandate longer\n       expiration times. Shorter token lifetimes are generally more secure\n       since tokens that have been exfiltrated by attackers can be used for\n       a shorter time. you can configure the maximum lifetime of the\n       incoming token in the configuration of the mapper.\n       The resulting Google token will expire within an hour or at \"exp\",\n       whichever is earlier.\n- sub: JWT subject, identity asserted in the JWT.\n- aud: Configured in the mapper policy. By default the service account\n       email.\n\nClaims from the incoming token can be transferred into the output token\naccoding to the mapper configuration. The outgoing claim size is limited.\nOutgoing claims size must be less than 4kB serialized as JSON without\nwhitespace.\n\nExample header:\n{\n  \"alg\": \"RS256\",\n  \"kid\": \"92a4265e14ab04d4d228a48d10d4ca31610936f8\"\n}\nExample payload:\n{\n  \"iss\": \"https://accounts.google.com\",\n  \"iat\": 1517963104,\n  \"exp\": 1517966704,\n  \"aud\":\n  \"https://iamcredentials.googleapis.com/google.iam.credentials.v1.CloudGaia\",\n  \"sub\": \"113475438248934895348\",\n  \"my_claims\": {\n    \"additional_claim\": \"value\"\n  }\n}", "type": "string"}, "scope": {"description": "Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.", "type": "array", "items": {"type": "string"}}}, "id": "GenerateIdentityBindingAccessTokenRequest"}, "SignBlobRequest": {"type": "object", "properties": {"delegates": {"description": "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`", "type": "array", "items": {"type": "string"}}, "payload": {"description": "The bytes to sign.", "format": "byte", "type": "string"}}, "id": "SignBlobRequest"}, "SignJwtResponse": {"type": "object", "properties": {"keyId": {"description": "The ID of the key used to sign the JWT.", "type": "string"}, "signedJwt": {"description": "The signed JWT.", "type": "string"}}, "id": "SignJwtResponse"}, "SignBlobResponse": {"type": "object", "properties": {"keyId": {"description": "The ID of the key used to sign the blob.", "type": "string"}, "signedBlob": {"description": "The signed blob.", "format": "byte", "type": "string"}}, "id": "SignBlobResponse"}}, "protocol": "rest", "icons": {"x16": "http://www.google.com/images/icons/product/search-16.gif", "x32": "http://www.google.com/images/icons/product/search-32.gif"}, "canonicalName": "IAM Credentials", "auth": {"oauth2": {"scopes": {"https://www.googleapis.com/auth/cloud-platform": {"description": "View and manage your data across Google Cloud Platform services"}}}}, "rootUrl": "https://iamcredentials.googleapis.com/", "ownerDomain": "google.com", "name": "iamcredentials"}