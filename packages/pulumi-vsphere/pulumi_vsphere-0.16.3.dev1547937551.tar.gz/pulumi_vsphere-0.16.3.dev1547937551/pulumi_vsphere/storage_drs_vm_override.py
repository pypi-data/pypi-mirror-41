# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from . import utilities, tables

class StorageDrsVmOverride(pulumi.CustomResource):
    datastore_cluster_id: pulumi.Output[str]
    """
    The [managed object reference
    ID][docs-about-morefs] of the datastore cluster to put the override in.
    Forces a new resource if changed.
    """
    sdrs_automation_level: pulumi.Output[str]
    """
    Overrides any Storage DRS automation
    levels for this virtual machine. Can be one of `automated` or `manual`. When
    not specified, the datastore cluster's settings are used according to the
    [specific SDRS subsystem][tf-vsphere-datastore-cluster-sdrs-levels].
    """
    sdrs_enabled: pulumi.Output[str]
    """
    Overrides the default Storage DRS setting for
    this virtual machine. When not specified, the datastore cluster setting is
    used.
    """
    sdrs_intra_vm_affinity: pulumi.Output[str]
    """
    Overrides the intra-VM affinity setting
    for this virtual machine. When `true`, all disks for this virtual machine
    will be kept on the same datastore. When `false`, Storage DRS may locate
    individual disks on different datastores if it helps satisfy cluster
    requirements. When not specified, the datastore cluster's settings are used.
    """
    virtual_machine_id: pulumi.Output[str]
    """
    The UUID of the virtual machine to create
    the override for.  Forces a new resource if changed.
    """
    def __init__(__self__, __name__, __opts__=None, datastore_cluster_id=None, sdrs_automation_level=None, sdrs_enabled=None, sdrs_intra_vm_affinity=None, virtual_machine_id=None):
        """
        The `vsphere_storage_drs_vm_override` resource can be used to add a Storage DRS
        override to a datastore cluster for a specific virtual machine. With this
        resource, one can enable or disable Storage DRS, and control the automation
        level and disk affinity for a single virtual machine without affecting the rest
        of the datastore cluster.
        
        For more information on vSphere datastore clusters and Storage DRS, see [this
        page][ref-vsphere-datastore-clusters].
        
        [ref-vsphere-datastore-clusters]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-598DF695-107E-406B-9C95-0AF961FC227A.html
        
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] datastore_cluster_id: The [managed object reference
               ID][docs-about-morefs] of the datastore cluster to put the override in.
               Forces a new resource if changed.
        :param pulumi.Input[str] sdrs_automation_level: Overrides any Storage DRS automation
               levels for this virtual machine. Can be one of `automated` or `manual`. When
               not specified, the datastore cluster's settings are used according to the
               [specific SDRS subsystem][tf-vsphere-datastore-cluster-sdrs-levels].
        :param pulumi.Input[str] sdrs_enabled: Overrides the default Storage DRS setting for
               this virtual machine. When not specified, the datastore cluster setting is
               used.
        :param pulumi.Input[str] sdrs_intra_vm_affinity: Overrides the intra-VM affinity setting
               for this virtual machine. When `true`, all disks for this virtual machine
               will be kept on the same datastore. When `false`, Storage DRS may locate
               individual disks on different datastores if it helps satisfy cluster
               requirements. When not specified, the datastore cluster's settings are used.
        :param pulumi.Input[str] virtual_machine_id: The UUID of the virtual machine to create
               the override for.  Forces a new resource if changed.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not datastore_cluster_id:
            raise TypeError('Missing required property datastore_cluster_id')
        __props__['datastore_cluster_id'] = datastore_cluster_id

        __props__['sdrs_automation_level'] = sdrs_automation_level

        __props__['sdrs_enabled'] = sdrs_enabled

        __props__['sdrs_intra_vm_affinity'] = sdrs_intra_vm_affinity

        if not virtual_machine_id:
            raise TypeError('Missing required property virtual_machine_id')
        __props__['virtual_machine_id'] = virtual_machine_id

        super(StorageDrsVmOverride, __self__).__init__(
            'vsphere:index/storageDrsVmOverride:StorageDrsVmOverride',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

