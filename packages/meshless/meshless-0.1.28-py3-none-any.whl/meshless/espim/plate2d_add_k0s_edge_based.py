from __future__ import absolute_import, division

import numpy as np

from ..logger import msg
from ..constants import ZGLOBAL
from ..utils import area_of_polygon, getMid

dof = 5


def boundary_edge(k0, edge, n1, n2, prop_from_node, alpha, maxl_from_area):
    # sub-tria1: mid1 -> node1 -> node2
    tria1 = edge.trias[0]
    mid1 = getMid(tria1)

    Ac = edge.Ac
    i1 = n1.index
    i2 = n2.index
    i3 = edge.othernode1.index

    # sub-tria 1
    xmid1, ymid1, zmid1 = mid1
    x1, y1, z1 = n1.xyz
    x2, y2, z2 = n2.xyz
    a1 = x1 - xmid1
    b1 = y1 - ymid1
    c1 = x2 - xmid1
    d1 = y2 - ymid1

    if prop_from_node:
        pn1 = n1.prop
        pn2 = n2.prop
        po1 = edge.othernode1.prop
        k13 = (4/9*pn1.scf_k13 + 4/9*pn2.scf_k13 + 1/9*po1.scf_k13)
        k23 = (4/9*pn1.scf_k23 + 4/9*pn2.scf_k23 + 1/9*po1.scf_k23)
        E = 4/9*pn1.E + 4/9*pn2.E + 1/9*po1.E
        h = (4/9*pn1.h + 4/9*pn2.h + 1/9*po1.h)
    else:
        k13 = tria1.prop.scf_k13
        k23 = tria1.prop.scf_k23
        E = tria1.prop.E
        h = tria1.prop.h

    E44 = k13 * E[0, 0]
    E45 = 0 # min(k13, k23) * E[0, 1]
    E55 = k23 * E[1, 1]

    if maxl_from_area:
        maxl = Ac**0.5
    else:
        maxl = max([ipt.le for ipt in edge.ipts])

    factor = alpha*maxl**2/h**2
    E44 = 1 / (1 + factor) * E44
    # E45 = 1 / (1 + factor) * E45
    E55 = 1 / (1 + factor) * E55

    k0[i1*dof+2, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))
    k0[i1*dof+2, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) - a1*c1*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i1*dof+2, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + b1*d1*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i1*dof+2, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))
    k0[i1*dof+2, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + a1*c1*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i1*dof+2, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) - b1*d1*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i1*dof+2, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/Ac + 0.166666666666667*(b1 - d1)*(Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/Ac
    k0[i1*dof+2, i3*dof+3] += 0.166666666666667*Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i1*dof+2, i3*dof+4] += 0.166666666666667*Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i1*dof+3, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4)
    k0[i1*dof+3, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4) - a1*c1*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4)/(4*Ac)
    k0[i1*dof+3, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4) + b1*d1*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4)/(4*Ac)
    k0[i1*dof+3, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4)
    k0[i1*dof+3, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4) + a1*c1*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4)/(4*Ac)
    k0[i1*dof+3, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4) - b1*d1*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4)/(4*Ac)
    k0[i1*dof+3, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E55*a1*c1/4)/Ac + 0.166666666666667*(b1 - d1)*(Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - E45*a1*c1/4)/Ac
    k0[i1*dof+3, i3*dof+3] += 0.166666666666667*Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E45*a1*c1
    k0[i1*dof+3, i3*dof+4] += 0.166666666666667*Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E55*a1*c1
    k0[i1*dof+4, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4)
    k0[i1*dof+4, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4) - a1*c1*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4)/(4*Ac)
    k0[i1*dof+4, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4) + b1*d1*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4)/(4*Ac)
    k0[i1*dof+4, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4)
    k0[i1*dof+4, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4) + a1*c1*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4)/(4*Ac)
    k0[i1*dof+4, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4) - b1*d1*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4)/(4*Ac)
    k0[i1*dof+4, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + E45*b1*d1/4)/Ac + 0.166666666666667*(b1 - d1)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E44*b1*d1/4)/Ac
    k0[i1*dof+4, i3*dof+3] += 0.166666666666667*Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E44*b1*d1
    k0[i1*dof+4, i3*dof+4] += 0.166666666666667*Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E45*b1*d1
    k0[i2*dof+2, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))
    k0[i2*dof+2, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) - a1*c1*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i2*dof+2, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + b1*d1*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i2*dof+2, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))
    k0[i2*dof+2, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) + a1*c1*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i2*dof+2, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)) - b1*d1*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/(4*Ac)
    k0[i2*dof+2, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/Ac + 0.166666666666667*(b1 - d1)*(Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac))/Ac
    k0[i2*dof+2, i3*dof+3] += 0.166666666666667*Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i2*dof+2, i3*dof+4] += 0.166666666666667*Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i2*dof+3, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4)
    k0[i2*dof+3, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4) - a1*c1*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4)/(4*Ac)
    k0[i2*dof+3, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4) + b1*d1*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4)/(4*Ac)
    k0[i2*dof+3, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4)
    k0[i2*dof+3, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4) + a1*c1*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4)/(4*Ac)
    k0[i2*dof+3, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4) - b1*d1*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4)/(4*Ac)
    k0[i2*dof+3, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + E55*a1*c1/4)/Ac + 0.166666666666667*(b1 - d1)*(Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + E45*a1*c1/4)/Ac
    k0[i2*dof+3, i3*dof+3] += 0.166666666666667*Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E45*a1*c1
    k0[i2*dof+3, i3*dof+4] += 0.166666666666667*Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E55*a1*c1
    k0[i2*dof+4, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4)
    k0[i2*dof+4, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4) - a1*c1*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4)/(4*Ac)
    k0[i2*dof+4, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4) + b1*d1*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4)/(4*Ac)
    k0[i2*dof+4, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4)
    k0[i2*dof+4, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4) + a1*c1*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4)/(4*Ac)
    k0[i2*dof+4, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4) - b1*d1*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4)/(4*Ac)
    k0[i2*dof+4, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - E45*b1*d1/4)/Ac + 0.166666666666667*(b1 - d1)*(Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - E44*b1*d1/4)/Ac
    k0[i2*dof+4, i3*dof+3] += 0.166666666666667*Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E44*b1*d1
    k0[i2*dof+4, i3*dof+4] += 0.166666666666667*Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E45*b1*d1
    k0[i3*dof+2, i1*dof+2] += (-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1)) + (d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))
    k0[i3*dof+2, i1*dof+3] += (0.166666666666667 + a1*d1/(4*Ac))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1)) - a1*c1*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/(4*Ac)
    k0[i3*dof+2, i1*dof+4] += (0.166666666666667 - b1*c1/(4*Ac))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1)) + b1*d1*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/(4*Ac)
    k0[i3*dof+2, i2*dof+2] += (a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1)) + (-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac)*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))
    k0[i3*dof+2, i2*dof+3] += (0.166666666666667 - b1*c1/(4*Ac))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1)) + a1*c1*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/(4*Ac)
    k0[i3*dof+2, i2*dof+4] += (0.166666666666667 + a1*d1/(4*Ac))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1)) - b1*d1*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/(4*Ac)
    k0[i3*dof+2, i3*dof+2] += 0.166666666666667*(-a1 + c1)*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + 0.166666666666667*(b1 - d1)*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i3*dof+3] += 0.166666666666667*E44*(0.166666666666667*b1 - 0.166666666666667*d1) + 0.166666666666667*E45*(-0.166666666666667*a1 + 0.166666666666667*c1)
    k0[i3*dof+2, i3*dof+4] += 0.166666666666667*E45*(0.166666666666667*b1 - 0.166666666666667*d1) + 0.166666666666667*E55*(-0.166666666666667*a1 + 0.166666666666667*c1)
    k0[i3*dof+3, i1*dof+2] += 0.166666666666667*Ac*E44*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E45*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i3*dof+3, i1*dof+3] += 0.166666666666667*Ac*E44*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E45*a1*c1
    k0[i3*dof+3, i1*dof+4] += 0.166666666666667*Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E44*b1*d1
    k0[i3*dof+3, i2*dof+2] += 0.166666666666667*Ac*E44*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E45*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i3*dof+3, i2*dof+3] += 0.166666666666667*Ac*E44*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E45*a1*c1
    k0[i3*dof+3, i2*dof+4] += 0.166666666666667*Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E44*b1*d1
    k0[i3*dof+3, i3*dof+2] += 0.0277777777777778*E44*(b1 - d1) + 0.0277777777777778*E45*(-a1 + c1)
    k0[i3*dof+3, i3*dof+3] += 0.0277777777777778*Ac*E44
    k0[i3*dof+3, i3*dof+4] += 0.0277777777777778*Ac*E45
    k0[i3*dof+4, i1*dof+2] += 0.166666666666667*Ac*E45*(d1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E55*(-c1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i3*dof+4, i1*dof+3] += 0.166666666666667*Ac*E45*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E55*a1*c1
    k0[i3*dof+4, i1*dof+4] += 0.166666666666667*Ac*E55*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E45*b1*d1
    k0[i3*dof+4, i2*dof+2] += 0.166666666666667*Ac*E45*(-b1/(2*Ac) + 0.166666666666667*(b1 - d1)/Ac) + 0.166666666666667*Ac*E55*(a1/(2*Ac) + 0.166666666666667*(-a1 + c1)/Ac)
    k0[i3*dof+4, i2*dof+3] += 0.166666666666667*Ac*E45*(0.166666666666667 - b1*c1/(4*Ac)) + 0.0416666666666667*E55*a1*c1
    k0[i3*dof+4, i2*dof+4] += 0.166666666666667*Ac*E55*(0.166666666666667 + a1*d1/(4*Ac)) - 0.0416666666666667*E45*b1*d1
    k0[i3*dof+4, i3*dof+2] += 0.0277777777777778*E45*(b1 - d1) + 0.0277777777777778*E55*(-a1 + c1)
    k0[i3*dof+4, i3*dof+3] += 0.0277777777777778*Ac*E45
    k0[i3*dof+4, i3*dof+4] += 0.0277777777777778*Ac*E55


def interior_edge(k0, edge, n1, n2, prop_from_node, alpha, maxl_from_area):
    # sub-tria1: mid1 -> node1 -> node2
    # sub-tria2: node1 -> mid2 -> node2
    tria1 = edge.trias[0]
    tria2 = edge.trias[1]
    mid1 = getMid(tria1)
    mid2 = getMid(tria2)

    Ac = edge.Ac
    i1 = n1.index
    i2 = n2.index
    i3 = edge.othernode1.index
    i4 = edge.othernode2.index

    # sub-tria 1
    tmp = np.array([mid1, n1.xyz, n2.xyz])
    Ac1 = area_of_polygon(tmp[:, 0], tmp[:, 1])
    xmid1, ymid1, z1 = mid1
    x1, y1, y1 = n1.xyz
    x2, y2, z2 = n2.xyz
    a1 = x1 - xmid1
    b1 = y1 - ymid1
    c1 = x2 - xmid1
    d1 = y2 - ymid1

    # sub-tria 2
    tmp = np.array([n1.xyz, mid2, n2.xyz])
    Ac2 = area_of_polygon(tmp[:, 0], tmp[:, 1])
    x1, y1, z1 = n1.xyz
    xmid2, ymid2, zmid2 = mid2
    x2, y2, z2 = n2.xyz
    a2 = xmid2 - x1
    b2 = ymid2 - y1
    c2 = x2 - x1
    d2 = y2 - y1

    if prop_from_node:
        pn1 = n1.prop
        pn2 = n2.prop
        po1 = edge.othernode1.prop
        po2 = edge.othernode2.prop
        k13 = (5/12*pn1.scf_k13 + 5/12*pn2.scf_k13 + 1/12*po1.scf_k13 + 1/12*po2.scf_k13)
        k23 = (5/12*pn1.scf_k23 + 5/12*pn2.scf_k23 + 1/12*po1.scf_k23 + 1/12*po2.scf_k23)
        E = 5/12*pn1.E + 5/12*pn2.E + 1/12*po1.E + 1/12*po2.E
        h = (5/12*pn1.h + 5/12*pn2.h + 1/12*po1.h + 1/12*po2.h)

    else:
        prop1 = tria1.prop
        prop2 = tria2.prop
        k13 = (Ac1*prop1.scf_k13 + Ac2*prop2.scf_k13)/Ac
        k23 = (Ac1*prop1.scf_k23 + Ac2*prop2.scf_k23)/Ac
        E = (Ac1*prop1.E + Ac2*prop2.E)/Ac
        h = (Ac1*prop1.h + Ac2*prop2.h)/Ac

    E44 = k13 * E[0, 0]
    E45 = min(k13, k23) * E[0, 1]
    E55 = k23 * E[1, 1]

    if maxl_from_area:
        maxl = Ac**0.5
    else:
        maxl = max(max([ipt.le for ipt in edge.ipts]), np.sum((edge.n1.xyz - edge.n2.xyz)**2)**0.5)

    E44 = h**2 / (h**2 + alpha*maxl**2) * E44
    E45 = h**2 / (h**2 + alpha*maxl**2) * E45
    E55 = h**2 / (h**2 + alpha*maxl**2) * E55

    k0[i1*dof+2, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i1*dof+2, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i1*dof+2, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i1*dof+2, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i1*dof+2, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i3*dof+3] += 0.166666666666667*Ac1*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i3*dof+4] += 0.166666666666667*Ac1*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i4*dof+2] += -0.166666666666667*c2*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + 0.166666666666667*d2*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + 0.0833333333333333*a2*d2*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+2, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac + 0.0833333333333333*b2*d2*(E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2))) + E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2))))/Ac
    k0[i1*dof+3, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i1*dof+3, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i1*dof+3, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i1*dof+3, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i1*dof+3, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i3*dof+3] += 0.166666666666667*Ac1*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i3*dof+4] += 0.166666666666667*Ac1*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i4*dof+2] += -0.166666666666667*c2*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + 0.166666666666667*d2*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + 0.0833333333333333*a2*d2*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+3, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E55*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac + 0.0833333333333333*b2*d2*(E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2)) + E45*(-a1*c1/4 - 0.0833333333333333*a2*c2))/Ac
    k0[i1*dof+4, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i1*dof+4, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i1*dof+4, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i1*dof+4, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i1*dof+4, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i3*dof+3] += 0.166666666666667*Ac1*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i3*dof+4] += 0.166666666666667*Ac1*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i4*dof+2] += -0.166666666666667*c2*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.166666666666667*d2*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.0833333333333333*a2*d2*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i1*dof+4, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(b1*d1/4 + 0.0833333333333333*b2*d2) + E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.0833333333333333*b2*d2*(E44*(b1*d1/4 + 0.0833333333333333*b2*d2) + E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+2, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i2*dof+2, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i2*dof+2, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i2*dof+2, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i2*dof+2, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i3*dof+3] += 0.166666666666667*Ac1*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i3*dof+4] += 0.166666666666667*Ac1*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i4*dof+2] += -0.166666666666667*c2*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + 0.166666666666667*d2*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + 0.0833333333333333*a2*d2*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+2, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac + 0.0833333333333333*b2*d2*(E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2)) + E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2)))/Ac
    k0[i2*dof+3, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i2*dof+3, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i2*dof+3, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i2*dof+3, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i2*dof+3, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i3*dof+3] += 0.166666666666667*Ac1*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i3*dof+4] += 0.166666666666667*Ac1*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i4*dof+2] += -0.166666666666667*c2*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + 0.166666666666667*d2*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + 0.0833333333333333*a2*d2*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+3, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E55*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac + 0.0833333333333333*b2*d2*(E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2))) + E45*(a1*c1/4 + 0.166666666666667*a2*c2))/Ac
    k0[i2*dof+4, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i2*dof+4, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i2*dof+4, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i2*dof+4, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i2*dof+4, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i3*dof+3] += 0.166666666666667*Ac1*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i3*dof+4] += 0.166666666666667*Ac1*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i4*dof+2] += -0.166666666666667*c2*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.166666666666667*d2*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.0833333333333333*a2*d2*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i2*dof+4, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(-b1*d1/4 - 0.166666666666667*b2*d2) + E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac + 0.0833333333333333*b2*d2*(E44*(-b1*d1/4 - 0.166666666666667*b2*d2) + E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2)))/Ac
    k0[i3*dof+2, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i3*dof+2, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i3*dof+2, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i3*dof+2, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i3*dof+2, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i3*dof+3] += 0.166666666666667*Ac1*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i3*dof+4] += 0.166666666666667*Ac1*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i4*dof+2] += -0.166666666666667*c2*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + 0.166666666666667*d2*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i4*dof+3] += -0.0833333333333333*a2*c2*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + 0.0833333333333333*a2*d2*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+2, i4*dof+4] += -0.0833333333333333*b2*c2*(E45*(0.166666666666667*b1 - 0.166666666666667*d1) + E55*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac + 0.0833333333333333*b2*d2*(E44*(0.166666666666667*b1 - 0.166666666666667*d1) + E45*(-0.166666666666667*a1 + 0.166666666666667*c1))/Ac
    k0[i3*dof+3, i1*dof+2] += 0.166666666666667*Ac1*E44*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))/Ac + 0.166666666666667*Ac1*E45*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))/Ac
    k0[i3*dof+3, i1*dof+3] += 0.166666666666667*Ac1*E44*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))/Ac + 0.166666666666667*Ac1*E45*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i3*dof+3, i1*dof+4] += 0.166666666666667*Ac1*E44*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac + 0.166666666666667*Ac1*E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))/Ac
    k0[i3*dof+3, i2*dof+2] += 0.166666666666667*Ac1*E44*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))/Ac + 0.166666666666667*Ac1*E45*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))/Ac
    k0[i3*dof+3, i2*dof+3] += 0.166666666666667*Ac1*E44*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))/Ac + 0.166666666666667*Ac1*E45*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i3*dof+3, i2*dof+4] += 0.166666666666667*Ac1*E44*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac + 0.166666666666667*Ac1*E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))/Ac
    k0[i3*dof+3, i3*dof+2] += 0.166666666666667*Ac1*E44*(0.166666666666667*b1 - 0.166666666666667*d1)/Ac + 0.166666666666667*Ac1*E45*(-0.166666666666667*a1 + 0.166666666666667*c1)/Ac
    k0[i3*dof+3, i3*dof+3] += 0.0277777777777778*(Ac1*Ac1)*E44/Ac
    k0[i3*dof+3, i3*dof+4] += 0.0277777777777778*(Ac1*Ac1)*E45/Ac
    k0[i3*dof+3, i4*dof+2] += 0.0277777777777778*Ac1*E44*d2/Ac - 0.0277777777777778*Ac1*E45*c2/Ac
    k0[i3*dof+3, i4*dof+3] += 0.0138888888888889*Ac1*E44*a2*d2/Ac - 0.0138888888888889*Ac1*E45*a2*c2/Ac
    k0[i3*dof+3, i4*dof+4] += 0.0138888888888889*Ac1*E44*b2*d2/Ac - 0.0138888888888889*Ac1*E45*b2*c2/Ac
    k0[i3*dof+4, i1*dof+2] += 0.166666666666667*Ac1*E45*(Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))/Ac + 0.166666666666667*Ac1*E55*(Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))/Ac
    k0[i3*dof+4, i1*dof+3] += 0.166666666666667*Ac1*E45*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))/Ac + 0.166666666666667*Ac1*E55*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i3*dof+4, i1*dof+4] += 0.166666666666667*Ac1*E45*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac + 0.166666666666667*Ac1*E55*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))/Ac
    k0[i3*dof+4, i2*dof+2] += 0.166666666666667*Ac1*E45*(Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))/Ac + 0.166666666666667*Ac1*E55*(Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))/Ac
    k0[i3*dof+4, i2*dof+3] += 0.166666666666667*Ac1*E45*(Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))/Ac + 0.166666666666667*Ac1*E55*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i3*dof+4, i2*dof+4] += 0.166666666666667*Ac1*E45*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac + 0.166666666666667*Ac1*E55*(Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))/Ac
    k0[i3*dof+4, i3*dof+2] += 0.166666666666667*Ac1*E45*(0.166666666666667*b1 - 0.166666666666667*d1)/Ac + 0.166666666666667*Ac1*E55*(-0.166666666666667*a1 + 0.166666666666667*c1)/Ac
    k0[i3*dof+4, i3*dof+3] += 0.0277777777777778*(Ac1*Ac1)*E45/Ac
    k0[i3*dof+4, i3*dof+4] += 0.0277777777777778*(Ac1*Ac1)*E55/Ac
    k0[i3*dof+4, i4*dof+2] += 0.0277777777777778*Ac1*E45*d2/Ac - 0.0277777777777778*Ac1*E55*c2/Ac
    k0[i3*dof+4, i4*dof+3] += 0.0138888888888889*Ac1*E45*a2*d2/Ac - 0.0138888888888889*Ac1*E55*a2*c2/Ac
    k0[i3*dof+4, i4*dof+4] += 0.0138888888888889*Ac1*E45*b2*d2/Ac - 0.0138888888888889*Ac1*E55*b2*c2/Ac
    k0[i4*dof+2, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac + (0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)*(-a1*c1/4 - 0.0833333333333333*a2*c2)/Ac
    k0[i4*dof+2, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + (0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)*(b1*d1/4 + 0.0833333333333333*b2*d2)/Ac
    k0[i4*dof+2, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac + (0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)*(a1*c1/4 + 0.166666666666667*a2*c2)/Ac
    k0[i4*dof+2, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + (0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)*(-b1*d1/4 - 0.166666666666667*b2*d2)/Ac
    k0[i4*dof+2, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i3*dof+3] += 0.166666666666667*Ac1*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i3*dof+4] += 0.166666666666667*Ac1*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac
    k0[i4*dof+2, i4*dof+2] += -0.166666666666667*c2*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + 0.166666666666667*d2*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i4*dof+3] += -0.0833333333333333*a2*c2*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + 0.0833333333333333*a2*d2*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+2, i4*dof+4] += -0.0833333333333333*b2*c2*(0.166666666666667*E45*d2 - 0.166666666666667*E55*c2)/Ac + 0.0833333333333333*b2*d2*(0.166666666666667*E44*d2 - 0.166666666666667*E45*c2)/Ac
    k0[i4*dof+3, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac + (-a1*c1/4 - 0.0833333333333333*a2*c2)*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac
    k0[i4*dof+3, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + (b1*d1/4 + 0.0833333333333333*b2*d2)*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac + (a1*c1/4 + 0.166666666666667*a2*c2)*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac
    k0[i4*dof+3, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + (-b1*d1/4 - 0.166666666666667*b2*d2)*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i3*dof+3] += 0.166666666666667*Ac1*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i3*dof+4] += 0.166666666666667*Ac1*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac
    k0[i4*dof+3, i4*dof+2] += -0.166666666666667*c2*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + 0.166666666666667*d2*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i4*dof+3] += -0.0833333333333333*a2*c2*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + 0.0833333333333333*a2*d2*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+3, i4*dof+4] += -0.0833333333333333*b2*c2*(0.0833333333333333*E45*a2*d2 - 0.0833333333333333*E55*a2*c2)/Ac + 0.0833333333333333*b2*d2*(0.0833333333333333*E44*a2*d2 - 0.0833333333333333*E45*a2*c2)/Ac
    k0[i4*dof+4, i1*dof+2] += (Ac1*(-c1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(-0.166666666666667*c2/Ac2 + (-a2 + c2)/(2*Ac2)))*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + (Ac1*(d1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(0.166666666666667*d2/Ac2 + (b2 - d2)/(2*Ac2)))*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i1*dof+3] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(1/2 + 0.0833333333333333*a2*d2/Ac2))*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac + (-a1*c1/4 - 0.0833333333333333*a2*c2)*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac
    k0[i4*dof+4, i1*dof+4] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(1/2 - 0.0833333333333333*b2*c2/Ac2))*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + (b1*d1/4 + 0.0833333333333333*b2*d2)*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i2*dof+2] += (Ac1*(a1/(2*Ac1) + 0.166666666666667*(-a1 + c1)/Ac1) + Ac2*(a2/(2*Ac2) - 0.166666666666667*c2/Ac2))*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + (Ac1*(-b1/(2*Ac1) + 0.166666666666667*(b1 - d1)/Ac1) + Ac2*(-b2/(2*Ac2) + 0.166666666666667*d2/Ac2))*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i2*dof+3] += (Ac1*(0.166666666666667 - b1*c1/(4*Ac1)) + Ac2*(0.0833333333333333*a2*d2/Ac2 - b2*c2/(4*Ac2)))*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac + (a1*c1/4 + 0.166666666666667*a2*c2)*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac
    k0[i4*dof+4, i2*dof+4] += (Ac1*(0.166666666666667 + a1*d1/(4*Ac1)) + Ac2*(a2*d2/(4*Ac2) - 0.0833333333333333*b2*c2/Ac2))*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + (-b1*d1/4 - 0.166666666666667*b2*d2)*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i3*dof+2] += (-0.166666666666667*a1 + 0.166666666666667*c1)*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + (0.166666666666667*b1 - 0.166666666666667*d1)*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i3*dof+3] += 0.166666666666667*Ac1*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i3*dof+4] += 0.166666666666667*Ac1*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac
    k0[i4*dof+4, i4*dof+2] += -0.166666666666667*c2*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + 0.166666666666667*d2*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i4*dof+3] += -0.0833333333333333*a2*c2*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + 0.0833333333333333*a2*d2*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac
    k0[i4*dof+4, i4*dof+4] += -0.0833333333333333*b2*c2*(0.0833333333333333*E45*b2*d2 - 0.0833333333333333*E55*b2*c2)/Ac + 0.0833333333333333*b2*d2*(0.0833333333333333*E44*b2*d2 - 0.0833333333333333*E45*b2*c2)/Ac


def add_k0s(k0, mesh, prop_from_node, alpha, maxl_from_area, silent=True):
    msg('Adding K0s to K0...', silent=silent)
    for edge in mesh.edges.values():
        n1 = edge.n1
        n2 = edge.n2
        mid1 = getMid(edge.trias[0])
        if np.dot(np.cross((n2.xyz - n1.xyz), (mid1 - n1.xyz)), ZGLOBAL) < 0:
            n2, n1 = n1, n2
        if len(edge.trias) == 1:
            boundary_edge(k0, edge, n1, n2, prop_from_node, alpha=alpha, maxl_from_area=maxl_from_area)
        elif len(edge.trias) == 2:
            interior_edge(k0, edge, n1, n2, prop_from_node, alpha=alpha, maxl_from_area=maxl_from_area)
        else:
            raise NotImplementedError('')

    msg('finished!', silent=silent)
    return k0
