#!/usr/bin/env python
'''
Copy the contents of a table in the old format on another in the new (JSON)
format.
'''

__author__ = ['Miguel Ramos Pernas']
__email__  = ['miguel.ramos.pernas@cern.ch']

# Python
import argparse
import logging
import os

# Local
import hep_rfm


def main( ifile, ofile, description ):
    '''
    Main function to execute.
    '''
    if os.path.exists(ofile):
        raise RuntimeError('File in "{}" already exists'.format(ofile))

    with open(ifile, 'rt') as f:

        files = []
        for l in f:

            name, path, pid, tmstp, fid = l.split()

            fields = {
                'name'          : name,
                'protocol_path' : {'path': path, 'pid': pid},
                'marks'         : {'tmstp': float(tmstp), 'fid': fid},
                }

            files.append(hep_rfm.FileInfo.from_fields(**fields))

        table = hep_rfm.Table.from_files(files, description=description)

        table.write(ofile)


if __name__ == '__main__':

    # Logging configuration
    logging.basicConfig(format='%(message)s')
    logging.getLogger().setLevel(logging.INFO)

    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('input', type=str,
    			help='Input table in the old-style format')
    parser.add_argument('output', type=str,
                        help='Output table that will be written in the new format')
    parser.add_argument('--description', type=str, default='',
                        help='Description for the output table')

    args = parser.parse_args()

    main(args.input, args.output, args.description)
