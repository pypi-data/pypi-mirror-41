[tox]
envlist =
    lint
    py27,py34,py35,py36,py37,py38,pypy,pypy3,
    docs,
    py{27,36}-cover,coverage

[testenv]
# Most of these are defaults but if you specify any you can't fall back
# to defaults for others.
basepython =
    py27: python2.7
    py34: python3.4
    py35: python3.5
    py36: python3.6
    py37: python3.7
    py38: python3.8
    pypy: pypy
    pypy3: pypy3
    py2: python2.7
    py3: python3.5

commands =
    pip install colander[testing]
    nosetests --with-xunit --xunit-file=nosetests-{envname}.xml {posargs:}

[testenv:docs]
basepython = python3.5
whitelist_externals = make
commands =
    pip install colander[docs]
    make -C docs html epub BUILDDIR={envdir} "SPHINXOPTS=-W -E"

# we separate coverage into its own testenv because a) "last run wins" wrt
# cobertura jenkins reporting and b) pypy and jython can't handle any
# combination of versions of coverage and nosexcover that i can find.

[py-cover]
commands =
    pip install colander[testing]
    coverage run --source=colander {envbindir}/nosetests
    coverage xml -o {envname}.xml

[testenv:py27-cover]
commands =
    {[py-cover]commands}
setenv =
    COVERAGE_FILE=.coverage.py2

[testenv:py36-cover]
commands =
    {[py-cover]commands}
setenv =
    COVERAGE_FILE=.coverage.py3

[testenv:coverage]
basepython = python3.6
commands =
    coverage erase
    coverage combine
    coverage xml
    coverage report --show-missing --fail-under=100
deps =
    coverage
setenv =
    COVERAGE_FILE=.coverage

[testenv:lint]
skip_install = true
basepython = python3.6
commands =
    flake8 colander setup.py
    black --check --diff colander setup.py
    python setup.py sdist --dist-dir {distdir}
    twine check {distdir}/*
    check-manifest
deps =
    flake8
    black
    readme_renderer[md]
    check-manifest
    twine

[testenv:black]
skip_install = true
basepython = python3.6
commands =
    black colander setup.py
deps =
    black

[testenv:build]
skip_install = true
basepython = python3.6
commands =
    # clean up build/ and dist/ folders
    python -c 'import shutil; shutil.rmtree("dist", ignore_errors=True)'
    python setup.py clean --all
    # build sdist
    python setup.py sdist --dist-dir {toxinidir}/dist
    # build wheel from sdist
    pip wheel -v --no-deps --no-index --no-build-isolation --wheel-dir {toxinidir}/dist --find-links {toxinidir}/dist colander
deps =
    setuptools
    wheel
