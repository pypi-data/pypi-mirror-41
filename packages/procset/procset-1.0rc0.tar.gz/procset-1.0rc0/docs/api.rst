.. role:: py(code)
   :language: python


API description
===============

This document describes the API for the :py:`ProcSet` class.

The implementation status is indicated by the bullet:
  - ✗ means the method is not yet implemented,
  - ✓ means the method is implemented,
  - ✓✓ means the method is implemented and optimized.


Basic operations
----------------

+--------+------------------------------+--------------------------------------------------------------------------+
| status | operation                    | comment                                                                  |
+========+==============================+==========================================================================+
| ✓      | :py:`str(s)`                 | implemented by :py:`__str__`                                             |
+--------+------------------------------+--------------------------------------------------------------------------+
| ✓      | :py:`repr(s)`                | - implemented by :py:`__repr__`                                          |
|        |                              | - see https://docs.python.org/3/reference/datamodel.html#object.__repr__ |
|        |                              |   for details about the expected behavior                                |
+--------+------------------------------+--------------------------------------------------------------------------+
| ✓      | :py:`format(s, format_spec)` | - implemented by :py:`__format__`                                        |
|        |                              | - the defaults separators are:                                           |
|        |                              |     - inner :py:`-`                                                      |
|        |                              |     - outer :py:`␣` (space, ascii code `0x20`)                           |
|        |                              | - the :py:`format_spec` is a string of length 2, where the inner         |
|        |                              |   (resp. outer) separator is the first (resp. second) item               |
|        |                              | - :py:`format(s, '')` matches the behavior of :py:`str` as recommended   |
|        |                              |   in the documentation, see                                              |
|        |                              |   https://docs.python.org/3/reference/datamodel.html#object.__str__      |
+--------+------------------------------+--------------------------------------------------------------------------+


Container-like operations
-------------------------

https://docs.python.org/3/reference/datamodel.html#emulating-container-types

+--------+-------------------------------+-------------------------------------+
| status | operation                     | comment                             |
+========+===============================+=====================================+
| ✓      | :py:`len(s)`                  | implemented by :py:`__len__`        |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`x in s`                  | implemented by :py:`__contains__`   |
+--------+-------------------------------+                                     |
| ✓      | :py:`x not in s`              |                                     |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`iter(s)`                 | implemented by :py:`__iter__`       |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`reversed(s)`             | implemented by :py:`__reversed__`   |
+--------+-------------------------------+-------------------------------------+


Sequence-like operations
------------------------

https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range

+--------+-------------------------------+-------------------------------------+
| status | operation                     | comment                             |
+========+===============================+=====================================+
| ✓      | :py:`[i]`                     | implemented with :py:`__getitem__`, |
|        |                               | called with an :py:`int`            |
+--------+-------------------------------+-------------------------------------+
| ✗      | :py:`[i:j]`                   | implemented with :py:`__getitem__`, |
|        |                               | called with a :py:`slice`           |
+--------+-------------------------------+                                     |
| ✗      | :py:`[i:j:k]`                 |                                     |
+--------+-------------------------------+-------------------------------------+
| ✗      | :py:`del s[i]`                | implemented with :py:`__delitem__`  |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`s.min`                   | provide fast access to extremal     |
+--------+-------------------------------+ processors (i.e, bounds of the      |
| ✓      | :py:`s.max`                   | convex hull)                        |
+--------+-------------------------------+-------------------------------------+

.. note:: The semantic of :py:`__getitem__` and :py:`__delitem__` should behave
          exactly as if we were dealing with a list of integers.  That is we
          must enforce for a given :py:`ProcSet` :py:`p` that the following
          snippets have the same semantic: :py:`p[i:j:k]` and
          :py:`list(p)[i:j:k]`. A similar beavior is expected from
          :py:`__delitem__`.

Set-like operations
-------------------

https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset

Immutable sets operations
^^^^^^^^^^^^^^^^^^^^^^^^^

+--------+-----------------------------------+-------------------------------------+
| status | operation                         | comment                             |
+========+===================================+=====================================+
| ✓      | :py:`isdisjoint(other)`           |                                     |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`issubset(other)`             | implemented by :py:`__le__`         |
+--------+-----------------------------------+                                     |
| ✓      | :py:`<= other`                    |                                     |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`< other`                     | implemented by :py:`__lt__`         |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`issuperset(other)`           | implemented by :py:`__ge__`         |
+--------+-----------------------------------+                                     |
| ✓      | :py:`>= other`                    |                                     |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`> other`                     | implemented by :py:`__gt__`         |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`== other`                    | implemented by :py:`__eq__`         |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`union(*others)`              | see :py:`| other | …`               |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`| other | …`                 | implemented by :py:`__or__`         |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`intersection(*others)`       | see :py:`& other & …`               |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`& other & …`                 | implemented by :py:`__and__`        |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`difference(*others)`         | see :py:`- other - …`               |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`- other - …`                 | implemented by :py:`__sub__`        |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`symmetric_difference(other)` | see :py:`^ other`                   |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`^ other`                     | implemented by :py:`__xor__`        |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`copy()`                      |                                     |
+--------+-----------------------------------+-------------------------------------+
| ✓      | :py:`deepcopy()`                  |                                     |
+--------+-----------------------------------+-------------------------------------+

Mutable sets operations
^^^^^^^^^^^^^^^^^^^^^^^

+--------+------------------------------------------+------------------------------------+
| status | operation                                | comment                            |
+========+==========================================+====================================+
| ✓      | :py:`update(*others)`                    | see :py:`|= other | …`             |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`|= other | …`                       | implemented by :py:`__ior__`       |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`intersection_update(*others)`       | see :py:`&= other & …`             |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`&= other & …`                       | implemented by :py:`__iand__`      |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`difference_update(*others)`         | see :py:`-= other | …`             |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`-= other | …`                       | implemented by :py:`__isub__`      |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`symmetric_difference_update(other)` | implemented by :py:`__ixor__`      |
+--------+------------------------------------------+                                    |
| ✓      | :py:`^= other`                           |                                    |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`insert(elem)`                       | alias of :py:`update()`            |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`discard(elem)`                      | alias of :py:`difference_update()` |
+--------+------------------------------------------+------------------------------------+
| ✓      | :py:`clear()`                            |                                    |
+--------+------------------------------------------+------------------------------------+


Specific operations
-------------------

+--------+-------------------------------+-------------------------------------+
| status | operation                     | comment                             |
+========+===============================+=====================================+
| ✓      | :py:`iscontiguous()`          | empty set is considered contiguous  |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`count()`                 | could add an optional parameter     |
|        |                               | :py:`minlen=1`, to count only       |
|        |                               | intervals of minimum length         |
|        |                               | :py:`minlen`                        |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`aggregate()`             |                                     |
+--------+-------------------------------+-------------------------------------+
| ✓      | :py:`intervals()`             |                                     |
+--------+-------------------------------+-------------------------------------+


Deprecated API
==============

The module `interval_set` provided an API to manipulate intervals' sets. The
new API of `procset` has been wrapped in the module `intsetwrap`. The
corresponding new API is detailed in the table below.

The module `intsetwrap` is intended as a temporary drop-in replacement to ease
the migration.
The module `intsetwrap` is planned for removal in the future major release, and
the old API it exposes should not be used for new projects.

+--------------------------------------+----------+--------------------------------+
| old API functions                    | wrapped? | replacement                    |
+======================================+==========+================================+
| :py:`aggregate(itvs)`                |        ✓ | :py:`pset.aggregate()`         |
+--------------------------------------+----------+--------------------------------+
| :py:`difference(itvs1, itvs2)`       |        ✓ | :py:`pset1 - pset2`            |
+--------------------------------------+----------+--------------------------------+
| :py:`equals(itvs1, itvs2)`           |        ✓ | :py:`pset1 == pset2`           |
+--------------------------------------+----------+--------------------------------+
| :py:`id_list_to_iterval_set(idlist)` |        ✓ | :py:`ProcSet(*idlist)`         |
+--------------------------------------+----------+--------------------------------+
| :py:`intersection(itvs1, itvs2)`     |        ✓ | :py:`pset1 & pset2`            |
+--------------------------------------+----------+--------------------------------+
| :py:`interval_set_to_id_list(itvs)`  |        ✓ | :py:`list(pset)`               |
+--------------------------------------+----------+--------------------------------+
| :py:`interval_set_to_set(itvs)`      |        ✓ | :py:`set(pset)`                |
+--------------------------------------+----------+--------------------------------+
| :py:`interval_set_to_string(itvs)`   |        ✓ | :py:`str(pset)`,               |
|                                      |          | :py:`format(pset)`             |
+--------------------------------------+----------+--------------------------------+
| :py:`set_to_interval_set(idset)`     |        ✓ | :py:`ProcSet(*idset)`          |
+--------------------------------------+----------+--------------------------------+
| :py:`string_to_interval_set(string)` |        ✓ | :py:`ProcSet.from_str(string)` |
+--------------------------------------+----------+--------------------------------+
| :py:`total(itvs)`                    |        ✓ | :py:`len(pset)`                |
+--------------------------------------+----------+--------------------------------+
| :py:`union(itvs1, itvs2)`            |        ✓ | :py:`pset1 | pset2`            |
+--------------------------------------+----------+--------------------------------+

Deprecated API usage in evalys
------------------------------

The comparison is made against commit d6d7234e51727adc0922b1df8826e5c6bd4b10ac.

+------------------------------+-----------+----------+
| old API function             | frequency | wrapped? |
+==============================+===========+==========+
| :py:`difference`             |         4 |        ✓ |
+------------------------------+-----------+----------+
| :py:`interval_set_to_set`    |         3 |        ✓ |
+------------------------------+-----------+----------+
| :py:`string_to_interval_set` |         3 |        ✓ |
+------------------------------+-----------+----------+
| :py:`intersection`           |         2 |        ✓ |
+------------------------------+-----------+----------+
| :py:`total`                  |         2 |        ✓ |
+------------------------------+-----------+----------+
| :py:`equals`                 |         1 |        ✓ |
+------------------------------+-----------+----------+
| :py:`interval_set_to_string` |         1 |        ✓ |
+------------------------------+-----------+----------+
| :py:`set_to_interval_set`    |         1 |        ✓ |
+------------------------------+-----------+----------+
| :py:`union`                  |         1 |        ✓ |
+------------------------------+-----------+----------+
