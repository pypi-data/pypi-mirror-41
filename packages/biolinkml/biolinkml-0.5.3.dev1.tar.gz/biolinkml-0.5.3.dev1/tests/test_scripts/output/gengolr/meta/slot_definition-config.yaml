description: the definition of a property or a slot
display_name: !!python/object/new:biolinkml.meta.ClassDefinitionName [slot definition]
document_category: !!python/object/new:biolinkml.meta.ClassDefinitionName [slot definition]
fields:
- description: the unique name of the element within the context of the schema
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [name]
  id: name
- description: a description of the element's purpose and use
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [description]
  id: description
- description: Description of why and when this element will no longer be used
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [deprecated]
  id: deprecated
- cardinality: multi
  description: editorial notes about an element intended for internal consumption
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [notes]
  id: notes
- cardinality: multi
  description: notes and comments about an element intended for external consumption
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [comments]
  id: comments
- cardinality: multi
  description: example usages of an element
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [examples]
  id: examples
- cardinality: multi
  description: used to indicate membership of a term in a defined subset of biolink
    terms used for a particular domain or application (e.g. the translator_minimal
    subset holding the minimal set of predicates used in a translator knowledge graph)
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [in_subset]
  id: in_subset
- description: id of the schema that defined the element
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [from_schema]
  id: from_schema
- cardinality: multi
  description: a reference
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [see_also]
  id: see_also
- cardinality: multi
  description: a list of Curie prefixes that are used in the representation of instances
    of the model.  All prefixes in this list are added to the prefix sections of the
    target models.
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [id_prefixes]
  id: id_prefixes
- description: specifies single-inheritance between classes or slots. While multiple
    inheritance is not allowed, mixins can be provided effectively providing the same
    thing. The semantics are the same when translated to formalisms that allow MI
    (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python
    classes) then is_a is used. When translating a framework without polymorphism
    (e.g. json-schema, solr document schema) then is_a and mixins are recursively
    unfolded
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [slot definition_is_a]
  id: is_a
- description: an abstract class is a high level class or slot that is typically used
    to group common slots together and cannot be directly instantiated.
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [abstract]
  id: abstract
- cardinality: multi
  description: map from local identifier to slot
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [local_names]
  id: local_names
- description: this slot or class can only be used as a mixin -- equivalent to abstract
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [mixin]
  id: mixin
- cardinality: multi
  description: List of definitions to be mixed in. Targets may be any definition of
    the same type
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [slot definition_mixins]
  id: mixins
- cardinality: multi
  description: Used to extend class or slot definitions. For example, if we have a
    core schema where a gene has two slots for identifier and symbol, and we have
    a specialized schema for my_organism where we wish to add a slot systematic_name,
    we can avoid subclassing by defining a class gene_my_organism, adding the slot
    to this class, and then adding an apply_to pointing to the gene class. The new
    slot will be 'injected into' the gene class.
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [slot definition_apply_to]
  id: apply_to
- cardinality: multi
  description: identifies the possible uri's of the range
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [values_from]
  id: values_from
- description: "defines the type of the subject of the slot.  Given the following\
    \ slot definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n\
    \    S1: Y\n\nimplicitly asserts that X is an instance of C1\n"
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [domain]
  id: domain
- description: "defines the type of the object of the slot.  Given the following slot\
    \ definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n \
    \   S1: Y\n\nimplicitly asserts Y is an instance of C2\n"
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [range]
  id: range
- description: predicate of this slot for semantic web application
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [slot_uri]
  id: slot_uri
- description: true means that slot can have more than one value
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [multivalued]
  id: multivalued
- description: true means that the *value* of a slot is inherited by subclasses
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [inherited]
  id: inherited
- description: If present, slot is read only.  Text explains why
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [readonly]
  id: readonly
- description: description of special behavior if the slot is absent
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [ifabsent]
  id: ifabsent
- description: true means that the slot must be present in the loaded definition
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [required]
  id: required
- description: an inlined definition a list of actual values rather than references.  Only
    applies to slots whose range is a class.
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [inlined]
  id: inlined
- description: true means that the slot uniquely identifies the element within the
    context of its container
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [key]
  id: key
- description: True means that this slot must be unique across the collection of slots
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [identifier]
  id: identifier
- description: the name used for a slot in the context of its owning class.  If present,
    this is used instead of the actual slot name.
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [alias]
  id: alias
- description: Constraint on the range of a property
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [range_subclass]
  id: subclass_of
- description: used to indicate the inverse of a slot (e.g. 'expresses' is the inverse
    predicate of 'expressed in')
  display_name: !!python/object/new:biolinkml.meta.SlotDefinitionName [inverse]
  id: inverse
id: slot_definition
schema_generating: true
weight: 20
