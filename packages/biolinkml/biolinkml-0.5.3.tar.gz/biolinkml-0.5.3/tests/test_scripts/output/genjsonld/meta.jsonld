{
  "name": "metamodel",
  "description": "A metamodel for defining biolink related schemas",
  "notes": [
    "This is a static copy of biolinkml/meta.yaml.  Update when appropriate"
  ],
  "id_prefixes": [
    "meta",
    "rdf",
    "rdfs",
    "xsd",
    "skos",
    "dcterms",
    "OIO",
    "owl",
    "pav"
  ],
  "id": "http://w3id.org/biolink/biolinkml/meta",
  "title": "Biolink Schema Metamodel",
  "version": "1.0.1",
  "imports": [
    "includes/types"
  ],
  "license": "https://creativecommons.org/publicdomain/zero/1.0/",
  "prefixes": [
    {
      "local_name": "meta",
      "prefix_uri": "http://w3id.org/biolink/biolinkml/meta/"
    },
    {
      "local_name": "skos",
      "prefix_uri": "http://www.w3.org/2004/02/skos/core#"
    },
    {
      "local_name": "OIO",
      "prefix_uri": "http://www.geneontology.org/formats/oboInOwl#"
    },
    {
      "local_name": "pav",
      "prefix_uri": "http://purl.org/pav/"
    },
    {
      "local_name": "metatype",
      "prefix_uri": "http://w3id.org/biolink/biolinkml/type/"
    },
    {
      "local_name": "xsd",
      "prefix_uri": "http://www.w3.org/2001/XMLSchema#"
    }
  ],
  "default_curi_maps": [
    "semweb_context"
  ],
  "default_prefix": "meta",
  "default_range": "string",
  "subsets": [
    {
      "name": "owl",
      "description": "Set of slots that appear in the OWL representation of a model",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta"
    }
  ],
  "types": [
    {
      "name": "string",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "@id": "string"
    },
    {
      "name": "integer",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "int",
      "uri": "http://www.w3.org/2001/XMLSchema#integer",
      "@id": "integer"
    },
    {
      "name": "boolean",
      "description": "A binary (true or false) value",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "Bool",
      "uri": "http://www.w3.org/2001/XMLSchema#boolean",
      "@id": "boolean"
    },
    {
      "name": "float",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#float",
      "@id": "float"
    },
    {
      "name": "double",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#double",
      "@id": "double"
    },
    {
      "name": "time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "XSDTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@id": "time"
    },
    {
      "name": "date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "XSDDateTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@id": "date"
    },
    {
      "name": "datetime",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "XSDDate",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@id": "datetime"
    },
    {
      "name": "uri",
      "description": "a URI or a CURIE",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "URIorCURIE",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@id": "uri"
    },
    {
      "name": "ncname",
      "description": "Prefix part of CURIE",
      "from_schema": "http://w3id.org/biolink/biolinkml/types",
      "imported_from": "includes/types",
      "base": "NCName",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@id": "ncname"
    }
  ],
  "slots": [
    {
      "name": "name",
      "description": "the unique name of the element within the context of the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "string",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#label",
      "required": true,
      "key": true,
      "@id": "name"
    },
    {
      "name": "description",
      "description": "a description of the element's purpose and use",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "string",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#definition",
      "@id": "description"
    },
    {
      "name": "deprecated",
      "description": "Description of why and when this element will no longer be used",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/deprecated",
      "@id": "deprecated"
    },
    {
      "name": "notes",
      "description": "editorial notes about an element intended for internal consumption",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "string",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#editorialNote",
      "multivalued": true,
      "@id": "notes"
    },
    {
      "name": "comments",
      "description": "notes and comments about an element intended for external consumption",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "string",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#note",
      "multivalued": true,
      "@id": "comments"
    },
    {
      "name": "examples",
      "description": "example usages of an element",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "Example",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#example",
      "multivalued": true,
      "inlined": true,
      "@id": "examples"
    },
    {
      "name": "in_subset",
      "description": "used to indicate membership of a term in a defined subset of biolink terms used for a particular domain or application (e.g. the translator_minimal subset holding the minimal set of predicates used in a translator knowledge graph)",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "SubsetDefinition",
      "slot_uri": "http://www.geneontology.org/formats/oboInOwl#inSubset",
      "multivalued": true,
      "@id": "in_subset"
    },
    {
      "name": "from_schema",
      "description": "id of the schema that defined the element",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "SchemaDefinition",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#inScheme",
      "readonly": "supplied by the schema loader",
      "@id": "from_schema"
    },
    {
      "name": "see_also",
      "description": "a reference",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "uri",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#seeAlso",
      "multivalued": true,
      "@id": "see_also"
    },
    {
      "name": "id_prefixes",
      "description": "a list of Curie prefixes that are used in the representation of instances of the model.  All prefixes in this list are added to the prefix sections of the target models.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Element",
      "range": "ncname",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/id_prefixes",
      "multivalued": true,
      "@id": "id_prefixes"
    },
    {
      "name": "is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is_a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is_a and mixins are recursively unfolded",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "Definition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/is_a",
      "@id": "is_a"
    },
    {
      "name": "abstract",
      "description": "an abstract class is a high level class or slot that is typically used to group common slots together and cannot be directly instantiated.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/abstract",
      "@id": "abstract"
    },
    {
      "name": "local_names",
      "description": "map from local identifier to slot",
      "notes": [
        "get this properly documented -- it is a map from an identifier to a slot name"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/local_names",
      "multivalued": true,
      "@id": "local_names"
    },
    {
      "name": "mixin",
      "description": "this slot or class can only be used as a mixin -- equivalent to abstract",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/mixin",
      "@id": "mixin"
    },
    {
      "name": "mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "Definition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/mixins",
      "multivalued": true,
      "@id": "mixins"
    },
    {
      "name": "apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "Definition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/apply_to",
      "multivalued": true,
      "@id": "apply_to"
    },
    {
      "name": "values_from",
      "description": "identifies the possible uri's of the range",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Definition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/values_from",
      "multivalued": true,
      "@id": "values_from"
    },
    {
      "name": "id",
      "description": "a globally unique schema identifier",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/id",
      "required": true,
      "identifier": true,
      "@id": "id"
    },
    {
      "name": "title",
      "description": "the official title of the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://purl.org/dc/terms/title",
      "@id": "title"
    },
    {
      "name": "version",
      "description": "particular version of schema",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://purl.org/pav/version",
      "@id": "version"
    },
    {
      "name": "imports",
      "description": "other schemas that are included in this schema",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/imports",
      "multivalued": true,
      "@id": "imports"
    },
    {
      "name": "license",
      "description": "license for the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://purl.org/dc/terms/license",
      "@id": "license"
    },
    {
      "name": "prefixes",
      "description": "prefix / URI definitions to be added to the context beyond those fetched from prefixcommons in id_prefixes",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "Prefix",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/prefixes",
      "multivalued": true,
      "inlined": true,
      "@id": "prefixes"
    },
    {
      "name": "default_curi_maps",
      "description": "ordered list of prefixcommon biocontexts to be fetched to resolve id_prefixes and inline prefix variables",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/default_curi_maps",
      "multivalued": true,
      "@id": "default_curi_maps"
    },
    {
      "name": "default_prefix",
      "description": "default and base prefix -- used for ':' identifiers, @base and @vocab",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/default_prefix",
      "@id": "default_prefix"
    },
    {
      "name": "default_range",
      "description": "default slot range to be used if range element is omitted from a slot definition",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "Definition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/default_range",
      "@id": "default_range"
    },
    {
      "name": "subsets",
      "description": "list of subsets referenced in this model",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "SubsetDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/subsets",
      "multivalued": true,
      "inlined": true,
      "@id": "subsets"
    },
    {
      "name": "types",
      "description": "data types used in the model",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "TypeDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/types",
      "multivalued": true,
      "inlined": true,
      "@id": "types"
    },
    {
      "name": "slot_definitions",
      "description": "slot definitions",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/slots",
      "multivalued": true,
      "inlined": true,
      "alias": "slots",
      "@id": "slot_definitions"
    },
    {
      "name": "classes",
      "description": "class definitions",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "ClassDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/classes",
      "multivalued": true,
      "inlined": true,
      "@id": "classes"
    },
    {
      "name": "metamodel_version",
      "description": "Version of the metamodel used to load the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/metamodel_version",
      "readonly": "supplied by the schema loader",
      "@id": "metamodel_version"
    },
    {
      "name": "source_file",
      "description": "name, uri or description of the source of the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/source_file",
      "readonly": "suppplied by the schema loader",
      "@id": "source_file"
    },
    {
      "name": "source_file_date",
      "description": "modification date of the source of the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "datetime",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/source_file_date",
      "readonly": "supplied by the loader",
      "@id": "source_file_date"
    },
    {
      "name": "source_file_size",
      "description": "size in bytes of the source of the schema",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "integer",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/source_file_size",
      "readonly": "supplied by the schema loader",
      "@id": "source_file_size"
    },
    {
      "name": "generation_date",
      "description": "date and time that the schema was loaded/generated",
      "in_subset": [
        "owl"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SchemaDefinition",
      "range": "datetime",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/generation_date",
      "readonly": "supplied by the schema loader",
      "@id": "generation_date"
    },
    {
      "name": "slots",
      "description": "list of slot names that are applicable to a class",
      "comments": [
        "the preferred way for defining slots is through the slot domain. The final list of slots for a class is the combination of the parent (is_a) slots, mixins slots, apply_to slots minus the slot_usage entries."
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "ClassDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/slots",
      "multivalued": true,
      "@id": "slots"
    },
    {
      "name": "slot_usage",
      "description": "the redefinition of a slot in the context of the containing class definition.",
      "comments": [
        "Many slots may be re-used across different classes, but the meaning of the slot may be refined by context. For example, a generic association model may use slots subject/predicate/object with generic semantics and minimal constraints. When this is subclasses, e.g. to disease-phenotype associations then slot_usage may specify both local naming (e.g. subject=disease) and local constraints"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "ClassDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/slot_usage",
      "multivalued": true,
      "inlined": true,
      "@id": "slot_usage"
    },
    {
      "name": "class_uri",
      "description": "URI of the class in an RDF environment",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "ClassDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/class_uri",
      "ifabsent": "set to <default_prefix>:<class_name>",
      "@id": "class_uri"
    },
    {
      "name": "defining_slots",
      "description": "The combination of is_a plus defining slots form a genus-differentia definition, or the set of necessary and sufficient conditions that can be transformed into an OWL equivalence axiom",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "ClassDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/defining_slots",
      "multivalued": true,
      "@id": "defining_slots"
    },
    {
      "name": "subclass_of",
      "description": "instances of this class are considered/required to be sub classes of the target URI",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "ClassDefinition",
      "range": "uri",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#subClassOf",
      "@id": "subclass_of"
    },
    {
      "name": "domain",
      "description": "defines the type of the subject of the slot.  Given the following slot definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n    S1: Y\n\nimplicitly asserts that X is an instance of C1\n",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "ClassDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/domain",
      "inherited": true,
      "required": true,
      "@id": "domain"
    },
    {
      "name": "range",
      "description": "defines the type of the object of the slot.  Given the following slot definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n    S1: Y\n\nimplicitly asserts Y is an instance of C2\n",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "Element",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/range",
      "inherited": true,
      "ifabsent": "set to default_range",
      "@id": "range"
    },
    {
      "name": "slot_uri",
      "description": "predicate of this slot for semantic web application",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/slot_uri",
      "ifabsent": "set to <default_prefix>:<slot_name>",
      "@id": "slot_uri"
    },
    {
      "name": "multivalued",
      "description": "true means that slot can have more than one value",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/multivalued",
      "inherited": true,
      "@id": "multivalued"
    },
    {
      "name": "inherited",
      "description": "true means that the *value* of a slot is inherited by subclasses",
      "comments": [
        "Inherited applies to slot values.  Parent *slots* are always inherited by subclasses"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/inherited",
      "inherited": true,
      "@id": "inherited"
    },
    {
      "name": "readonly",
      "description": "If present, slot is read only.  Text explains why",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/readonly",
      "inherited": true,
      "@id": "readonly"
    },
    {
      "name": "ifabsent",
      "description": "description of special behavior if the slot is absent",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/ifabsent",
      "inherited": true,
      "@id": "ifabsent"
    },
    {
      "name": "required",
      "description": "true means that the slot must be present in the loaded definition",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/required",
      "inherited": true,
      "@id": "required"
    },
    {
      "name": "inlined",
      "description": "an inlined definition a list of actual values rather than references.  Only applies to slots whose range is a class.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/inlined",
      "inherited": true,
      "@id": "inlined"
    },
    {
      "name": "key",
      "description": "true means that the slot uniquely identifies the element within the context of its container",
      "notes": [
        "a given domain can have at most one key",
        "key slots default to required"
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/key",
      "inherited": true,
      "@id": "key"
    },
    {
      "name": "identifier",
      "description": "True means that this slot must be unique across the collection of slots",
      "comments": [
        "keys and identifiers must be inherited."
      ],
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "boolean",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/identifier",
      "inherited": true,
      "@id": "identifier"
    },
    {
      "name": "alias",
      "description": "the name used for a slot in the context of its owning class.  If present, this is used instead of the actual slot name.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/alias",
      "@id": "alias"
    },
    {
      "name": "range_subclass",
      "description": "Constraint on the range of a property",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/subclass_of",
      "alias": "subclass_of",
      "@id": "range_subclass"
    },
    {
      "name": "inverse",
      "description": "used to indicate the inverse of a slot (e.g. 'expresses' is the inverse predicate of 'expressed in')",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "SlotDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://www.w3.org/2002/07/owl#inverseOf",
      "@id": "inverse"
    },
    {
      "name": "typeof",
      "description": "supertype",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "TypeDefinition",
      "range": "TypeDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/typeof",
      "@id": "typeof"
    },
    {
      "name": "base",
      "description": "python base type that implements this type definition",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "TypeDefinition",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/base",
      "@id": "base"
    },
    {
      "name": "type_uri",
      "description": "the URI to be used for the type in semantic web mappings",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "TypeDefinition",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/uri",
      "alias": "uri",
      "@id": "type_uri"
    },
    {
      "name": "value",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Example",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/value",
      "@id": "value"
    },
    {
      "name": "value_description",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Example",
      "range": "string",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/description",
      "alias": "description",
      "@id": "value_description"
    },
    {
      "name": "local_name",
      "description": "the nsname (sans ':' for a given prefix)",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Prefix",
      "range": "ncname",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/local_name",
      "required": true,
      "key": true,
      "@id": "local_name"
    },
    {
      "name": "prefix_uri",
      "description": "A URI associated with a given prefix",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "domain": "Prefix",
      "range": "uri",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/prefix_uri",
      "required": true,
      "@id": "prefix_uri"
    },
    {
      "name": "schema_definition_description",
      "description": "a description of the element's purpose and use",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "description",
      "domain": "SchemaDefinition",
      "range": "string",
      "slot_uri": "http://purl.org/dc/terms/description",
      "alias": "description",
      "@id": "schema_definition_description"
    },
    {
      "name": "slot_definition_is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is_a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is_a and mixins are recursively unfolded",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "is_a",
      "domain": "SlotDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/is_a",
      "alias": "is_a",
      "@id": "slot_definition_is_a"
    },
    {
      "name": "slot_definition_mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "mixins",
      "domain": "SlotDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/mixins",
      "multivalued": true,
      "alias": "mixins",
      "@id": "slot_definition_mixins"
    },
    {
      "name": "slot_definition_apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "apply_to",
      "domain": "SlotDefinition",
      "range": "SlotDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/apply_to",
      "multivalued": true,
      "alias": "apply_to",
      "@id": "slot_definition_apply_to"
    },
    {
      "name": "class_definition_is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is_a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is_a and mixins are recursively unfolded",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "is_a",
      "domain": "ClassDefinition",
      "range": "ClassDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/is_a",
      "alias": "is_a",
      "@id": "class_definition_is_a"
    },
    {
      "name": "class_definition_mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "mixins",
      "domain": "ClassDefinition",
      "range": "ClassDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/mixins",
      "multivalued": true,
      "alias": "mixins",
      "@id": "class_definition_mixins"
    },
    {
      "name": "class_definition_apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "apply_to",
      "domain": "ClassDefinition",
      "range": "ClassDefinition",
      "slot_uri": "http://w3id.org/biolink/biolinkml/meta/apply_to",
      "multivalued": true,
      "alias": "apply_to",
      "@id": "class_definition_apply_to"
    }
  ],
  "classes": [
    {
      "name": "Element",
      "description": "a named element in the model",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "abstract": true,
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/Element",
      "@id": "Element"
    },
    {
      "name": "SchemaDefinition",
      "description": "a collection of subset, type, slot and class definitions",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Element",
      "slots": [
        "name",
        "schema_definition_description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes",
        "id",
        "title",
        "version",
        "imports",
        "license",
        "prefixes",
        "default_curi_maps",
        "default_prefix",
        "default_range",
        "subsets",
        "types",
        "slot_definitions",
        "classes",
        "metamodel_version",
        "source_file",
        "source_file_date",
        "source_file_size",
        "generation_date"
      ],
      "slot_usage": [
        {
          "name": "description",
          "domain": "SchemaDefinition",
          "slot_uri": "http://purl.org/dc/terms/description"
        }
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/SchemaDefinition",
      "@id": "SchemaDefinition"
    },
    {
      "name": "TypeDefinition",
      "description": "A data type definition.",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Element",
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes",
        "typeof",
        "base",
        "type_uri"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/TypeDefinition",
      "@id": "TypeDefinition"
    },
    {
      "name": "SubsetDefinition",
      "description": "the name and description of a subset",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Element",
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/SubsetDefinition",
      "@id": "SubsetDefinition"
    },
    {
      "name": "Definition",
      "description": "base class for definitions",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Element",
      "abstract": true,
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes",
        "is_a",
        "abstract",
        "local_names",
        "mixin",
        "mixins",
        "apply_to",
        "values_from"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/Definition",
      "@id": "Definition"
    },
    {
      "name": "SlotDefinition",
      "description": "the definition of a property or a slot",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Definition",
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes",
        "slot_definition_is_a",
        "abstract",
        "local_names",
        "mixin",
        "slot_definition_mixins",
        "slot_definition_apply_to",
        "values_from",
        "domain",
        "range",
        "slot_uri",
        "multivalued",
        "inherited",
        "readonly",
        "ifabsent",
        "required",
        "inlined",
        "key",
        "identifier",
        "alias",
        "range_subclass",
        "inverse"
      ],
      "slot_usage": [
        {
          "name": "is_a",
          "domain": "SlotDefinition",
          "range": "SlotDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        },
        {
          "name": "mixins",
          "domain": "SlotDefinition",
          "range": "SlotDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        },
        {
          "name": "apply_to",
          "domain": "SlotDefinition",
          "range": "SlotDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        }
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/SlotDefinition",
      "@id": "SlotDefinition"
    },
    {
      "name": "ClassDefinition",
      "description": "the definition of a class or interface",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "is_a": "Definition",
      "slots": [
        "name",
        "description",
        "deprecated",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "see_also",
        "id_prefixes",
        "class_definition_is_a",
        "abstract",
        "local_names",
        "mixin",
        "class_definition_mixins",
        "class_definition_apply_to",
        "values_from",
        "slots",
        "slot_usage",
        "class_uri",
        "defining_slots",
        "subclass_of"
      ],
      "slot_usage": [
        {
          "name": "is_a",
          "domain": "ClassDefinition",
          "range": "ClassDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        },
        {
          "name": "mixins",
          "domain": "ClassDefinition",
          "range": "ClassDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        },
        {
          "name": "apply_to",
          "domain": "ClassDefinition",
          "range": "ClassDefinition",
          "slot_uri": "http://w3id.org/biolink/biolinkml/meta/None"
        }
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/ClassDefinition",
      "@id": "ClassDefinition"
    },
    {
      "name": "Prefix",
      "description": "prefix URI tuple",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "slots": [
        "local_name",
        "prefix_uri"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/Prefix",
      "@id": "Prefix"
    },
    {
      "name": "Example",
      "description": "usage example and description",
      "from_schema": "http://w3id.org/biolink/biolinkml/meta",
      "slots": [
        "value",
        "value_description"
      ],
      "class_uri": "http://w3id.org/biolink/biolinkml/meta/Example",
      "@id": "Example"
    }
  ],
  "metamodel_version": "1.0.1",
  "source_file": "meta.yaml",
  "source_file_date": "Wed Jan 30 16:49:26 2019",
  "source_file_size": 19963,
  "generation_date": "2019-02-05 10:22",
  "@context": [
    "file:///Users/solbrig/git/biolink/biolinkml/tests/test_scripts/output/gencontext/meta.jsonld",
    {
      "@base": "http://w3id.org/biolink/biolinkml/meta/"
    }
  ],
  "@id": "http://w3id.org/biolink/biolinkml/meta"
}

