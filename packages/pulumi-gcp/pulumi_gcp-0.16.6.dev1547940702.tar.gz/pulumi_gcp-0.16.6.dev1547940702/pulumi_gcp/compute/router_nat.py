# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class RouterNat(pulumi.CustomResource):
    icmp_idle_timeout_sec: pulumi.Output[int]
    min_ports_per_vm: pulumi.Output[int]
    name: pulumi.Output[str]
    nat_ip_allocate_option: pulumi.Output[str]
    nat_ips: pulumi.Output[list]
    project: pulumi.Output[str]
    region: pulumi.Output[str]
    router: pulumi.Output[str]
    source_subnetwork_ip_ranges_to_nat: pulumi.Output[str]
    subnetworks: pulumi.Output[list]
    tcp_established_idle_timeout_sec: pulumi.Output[int]
    tcp_transitory_idle_timeout_sec: pulumi.Output[int]
    udp_idle_timeout_sec: pulumi.Output[int]
    def __init__(__self__, __name__, __opts__=None, icmp_idle_timeout_sec=None, min_ports_per_vm=None, name=None, nat_ip_allocate_option=None, nat_ips=None, project=None, region=None, router=None, source_subnetwork_ip_ranges_to_nat=None, subnetworks=None, tcp_established_idle_timeout_sec=None, tcp_transitory_idle_timeout_sec=None, udp_idle_timeout_sec=None):
        """
        Create a RouterNat resource with the given unique name, props, and options.
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[int] icmp_idle_timeout_sec
        :param pulumi.Input[int] min_ports_per_vm
        :param pulumi.Input[str] name
        :param pulumi.Input[str] nat_ip_allocate_option
        :param pulumi.Input[list] nat_ips
        :param pulumi.Input[str] project
        :param pulumi.Input[str] region
        :param pulumi.Input[str] router
        :param pulumi.Input[str] source_subnetwork_ip_ranges_to_nat
        :param pulumi.Input[list] subnetworks
        :param pulumi.Input[int] tcp_established_idle_timeout_sec
        :param pulumi.Input[int] tcp_transitory_idle_timeout_sec
        :param pulumi.Input[int] udp_idle_timeout_sec
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['icmp_idle_timeout_sec'] = icmp_idle_timeout_sec

        __props__['min_ports_per_vm'] = min_ports_per_vm

        __props__['name'] = name

        if not nat_ip_allocate_option:
            raise TypeError('Missing required property nat_ip_allocate_option')
        __props__['nat_ip_allocate_option'] = nat_ip_allocate_option

        __props__['nat_ips'] = nat_ips

        __props__['project'] = project

        __props__['region'] = region

        if not router:
            raise TypeError('Missing required property router')
        __props__['router'] = router

        __props__['source_subnetwork_ip_ranges_to_nat'] = source_subnetwork_ip_ranges_to_nat

        __props__['subnetworks'] = subnetworks

        __props__['tcp_established_idle_timeout_sec'] = tcp_established_idle_timeout_sec

        __props__['tcp_transitory_idle_timeout_sec'] = tcp_transitory_idle_timeout_sec

        __props__['udp_idle_timeout_sec'] = udp_idle_timeout_sec

        super(RouterNat, __self__).__init__(
            'gcp:compute/routerNat:RouterNat',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

