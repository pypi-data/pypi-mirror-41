# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qt_resources/MainWindow.ui',
# licensing of 'qt_resources/MainWindow.ui' applies.
#
# Created: Thu Dec 27 16:24:07 2018
#      by: pyside2-uic  running on PySide2 5.12.0
#
# WARNING! All changes made in this file will be lost!

from PySide2 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1048, 582)
        MainWindow.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.mainPanel = QtWidgets.QWidget(MainWindow)
        self.mainPanel.setObjectName("mainPanel")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.mainPanel)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.dataView = SearchableTextEdit(self.mainPanel)
        self.dataView.setAcceptDrops(False)
        self.dataView.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.dataView.setObjectName("dataView")
        self.verticalLayout_5.addWidget(self.dataView)
        MainWindow.setCentralWidget(self.mainPanel)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1048, 30))
        self.menubar.setObjectName("menubar")
        self.menuDataBase = QtWidgets.QMenu(self.menubar)
        self.menuDataBase.setObjectName("menuDataBase")
        self.menuRecent = QtWidgets.QMenu(self.menuDataBase)
        self.menuRecent.setObjectName("menuRecent")
        self.menuStandard = QtWidgets.QMenu(self.menuDataBase)
        self.menuStandard.setObjectName("menuStandard")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuAdvanced = QtWidgets.QMenu(self.menubar)
        self.menuAdvanced.setEnabled(True)
        self.menuAdvanced.setObjectName("menuAdvanced")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuPanels = QtWidgets.QMenu(self.menubar)
        self.menuPanels.setObjectName("menuPanels")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.filterPanel = QtWidgets.QDockWidget(MainWindow)
        self.filterPanel.setObjectName("filterPanel")
        self.filterPanelContents = QtWidgets.QWidget()
        self.filterPanelContents.setObjectName("filterPanelContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.filterPanelContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.iovTagFilterGroupBox = QtWidgets.QGroupBox(self.filterPanelContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.iovTagFilterGroupBox.sizePolicy().hasHeightForWidth())
        self.iovTagFilterGroupBox.setSizePolicy(sizePolicy)
        self.iovTagFilterGroupBox.setObjectName("iovTagFilterGroupBox")
        self.iovTagFilterLayout = QtWidgets.QFormLayout(self.iovTagFilterGroupBox)
        self.iovTagFilterLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.iovTagFilterLayout.setLabelAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.iovTagFilterLayout.setFormAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.iovTagFilterLayout.setObjectName("iovTagFilterLayout")
        self.sinceLabel = QtWidgets.QLabel(self.iovTagFilterGroupBox)
        self.sinceLabel.setObjectName("sinceLabel")
        self.iovTagFilterLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.sinceLabel)
        self.sinceFilterWidget = TimePointEdit(self.iovTagFilterGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sinceFilterWidget.sizePolicy().hasHeightForWidth())
        self.sinceFilterWidget.setSizePolicy(sizePolicy)
        self.sinceFilterWidget.setObjectName("sinceFilterWidget")
        self.iovTagFilterLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.sinceFilterWidget)
        self.untilLabel = QtWidgets.QLabel(self.iovTagFilterGroupBox)
        self.untilLabel.setObjectName("untilLabel")
        self.iovTagFilterLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.untilLabel)
        self.untilFilterWidget = TimePointEdit(self.iovTagFilterGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.untilFilterWidget.sizePolicy().hasHeightForWidth())
        self.untilFilterWidget.setSizePolicy(sizePolicy)
        self.untilFilterWidget.setObjectName("untilFilterWidget")
        self.iovTagFilterLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.untilFilterWidget)
        self.tagLabel = QtWidgets.QLabel(self.iovTagFilterGroupBox)
        self.tagLabel.setObjectName("tagLabel")
        self.iovTagFilterLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.tagLabel)
        self.tagComboBox = QtWidgets.QComboBox(self.iovTagFilterGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tagComboBox.sizePolicy().hasHeightForWidth())
        self.tagComboBox.setSizePolicy(sizePolicy)
        self.tagComboBox.setObjectName("tagComboBox")
        self.iovTagFilterLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.tagComboBox)
        self.hideAutoCheckBox = QtWidgets.QCheckBox(self.iovTagFilterGroupBox)
        self.hideAutoCheckBox.setChecked(True)
        self.hideAutoCheckBox.setObjectName("hideAutoCheckBox")
        self.iovTagFilterLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.hideAutoCheckBox)
        self.verticalLayout_4.addWidget(self.iovTagFilterGroupBox)
        self.iovTableGroupBox = QtWidgets.QGroupBox(self.filterPanelContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.iovTableGroupBox.sizePolicy().hasHeightForWidth())
        self.iovTableGroupBox.setSizePolicy(sizePolicy)
        self.iovTableGroupBox.setObjectName("iovTableGroupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.iovTableGroupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.iovView = QtWidgets.QTableView(self.iovTableGroupBox)
        self.iovView.setEnabled(True)
        self.iovView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.iovView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.iovView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.iovView.setObjectName("iovView")
        self.verticalLayout.addWidget(self.iovView)
        self.iovUTCCheckBox = QtWidgets.QCheckBox(self.iovTableGroupBox)
        self.iovUTCCheckBox.setChecked(True)
        self.iovUTCCheckBox.setObjectName("iovUTCCheckBox")
        self.verticalLayout.addWidget(self.iovUTCCheckBox)
        self.verticalLayout_4.addWidget(self.iovTableGroupBox)
        self.payloadGroupBox = QtWidgets.QGroupBox(self.filterPanelContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.payloadGroupBox.sizePolicy().hasHeightForWidth())
        self.payloadGroupBox.setSizePolicy(sizePolicy)
        self.payloadGroupBox.setObjectName("payloadGroupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.payloadGroupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.fieldsView = QtWidgets.QListView(self.payloadGroupBox)
        self.fieldsView.setObjectName("fieldsView")
        self.verticalLayout_2.addWidget(self.fieldsView)
        self.verticalLayout_4.addWidget(self.payloadGroupBox)
        self.filterPanel.setWidget(self.filterPanelContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.filterPanel)
        self.browsePanel = QtWidgets.QDockWidget(MainWindow)
        self.browsePanel.setObjectName("browsePanel")
        self.browsePanelContents = QtWidgets.QWidget()
        self.browsePanelContents.setObjectName("browsePanelContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.browsePanelContents)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pathPanel = QtWidgets.QWidget(self.browsePanelContents)
        self.pathPanel.setObjectName("pathPanel")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.pathPanel)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pathLabel = QtWidgets.QLabel(self.pathPanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pathLabel.sizePolicy().hasHeightForWidth())
        self.pathLabel.setSizePolicy(sizePolicy)
        self.pathLabel.setObjectName("pathLabel")
        self.horizontalLayout.addWidget(self.pathLabel)
        self.pathComboBox = QtWidgets.QComboBox(self.pathPanel)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pathComboBox.sizePolicy().hasHeightForWidth())
        self.pathComboBox.setSizePolicy(sizePolicy)
        self.pathComboBox.setEditable(False)
        self.pathComboBox.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.pathComboBox.setObjectName("pathComboBox")
        self.horizontalLayout.addWidget(self.pathComboBox)
        self.verticalLayout_3.addWidget(self.pathPanel)
        self.hierarchyTreeView = QtWidgets.QTreeView(self.browsePanelContents)
        self.hierarchyTreeView.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.hierarchyTreeView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.hierarchyTreeView.setProperty("showDropIndicator", False)
        self.hierarchyTreeView.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.hierarchyTreeView.setHeaderHidden(True)
        self.hierarchyTreeView.setObjectName("hierarchyTreeView")
        self.verticalLayout_3.addWidget(self.hierarchyTreeView)
        self.browsePanel.setWidget(self.browsePanelContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.browsePanel)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionCreate_slice = QtWidgets.QAction(MainWindow)
        self.actionCreate_slice.setObjectName("actionCreate_slice")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionAdd_condition = QtWidgets.QAction(MainWindow)
        self.actionAdd_condition.setObjectName("actionAdd_condition")
        self.actionNew_tag = QtWidgets.QAction(MainWindow)
        self.actionNew_tag.setObjectName("actionNew_tag")
        self.actionNew_node = QtWidgets.QAction(MainWindow)
        self.actionNew_node.setObjectName("actionNew_node")
        self.actionDelete_node = QtWidgets.QAction(MainWindow)
        self.actionDelete_node.setObjectName("actionDelete_node")
        self.actionDelete_tag = QtWidgets.QAction(MainWindow)
        self.actionDelete_tag.setObjectName("actionDelete_tag")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAbout_Qt = QtWidgets.QAction(MainWindow)
        self.actionAbout_Qt.setObjectName("actionAbout_Qt")
        self.actionDump_to_files = QtWidgets.QAction(MainWindow)
        self.actionDump_to_files.setObjectName("actionDump_to_files")
        self.actionRead_Only = QtWidgets.QAction(MainWindow)
        self.actionRead_Only.setCheckable(True)
        self.actionRead_Only.setChecked(True)
        self.actionRead_Only.setObjectName("actionRead_Only")
        self.actionCopy_path = QtWidgets.QAction(MainWindow)
        self.actionCopy_path.setObjectName("actionCopy_path")
        self.actionCopy_connection_string = QtWidgets.QAction(MainWindow)
        self.actionCopy_connection_string.setObjectName("actionCopy_connection_string")
        self.actionWelcome_message = QtWidgets.QAction(MainWindow)
        self.actionWelcome_message.setObjectName("actionWelcome_message")
        self.menuDataBase.addAction(self.actionNew)
        self.menuDataBase.addAction(self.actionOpen)
        self.menuDataBase.addAction(self.menuRecent.menuAction())
        self.menuDataBase.addAction(self.menuStandard.menuAction())
        self.menuDataBase.addSeparator()
        self.menuDataBase.addAction(self.actionRead_Only)
        self.menuDataBase.addSeparator()
        self.menuDataBase.addAction(self.actionCopy_connection_string)
        self.menuDataBase.addSeparator()
        self.menuDataBase.addAction(self.actionCreate_slice)
        self.menuDataBase.addAction(self.actionDump_to_files)
        self.menuDataBase.addAction(self.actionClose)
        self.menuDataBase.addSeparator()
        self.menuDataBase.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionAdd_condition)
        self.menuEdit.addAction(self.actionNew_tag)
        self.menuAdvanced.addAction(self.actionNew_node)
        self.menuAdvanced.addAction(self.actionDelete_node)
        self.menuAdvanced.addAction(self.actionDelete_tag)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionAbout_Qt)
        self.menubar.addAction(self.menuDataBase.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuAdvanced.menuAction())
        self.menubar.addAction(self.menuPanels.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.actionQuit, QtCore.SIGNAL("triggered()"), MainWindow.close)
        QtCore.QObject.connect(self.actionAbout_Qt, QtCore.SIGNAL("triggered()"), MainWindow.aboutQt)
        QtCore.QObject.connect(self.actionClose, QtCore.SIGNAL("triggered()"), MainWindow.closeDatabase)
        QtCore.QObject.connect(self.actionAbout, QtCore.SIGNAL("triggered()"), MainWindow.aboutDialog)
        QtCore.QObject.connect(self.pathComboBox, QtCore.SIGNAL("currentIndexChanged(QString)"), MainWindow.selectedPath)
        QtCore.QObject.connect(self.actionRead_Only, QtCore.SIGNAL("triggered(bool)"), MainWindow.reopenDatabase)
        QtCore.QObject.connect(self.sinceFilterWidget, QtCore.SIGNAL("dateTimeChanged(QDateTime)"), self.untilFilterWidget.setMinimumDateTime)
        QtCore.QObject.connect(self.untilFilterWidget, QtCore.SIGNAL("maxChecked()"), self.sinceFilterWidget.resetMaximumDateTime)
        QtCore.QObject.connect(self.untilFilterWidget, QtCore.SIGNAL("dateTimeChanged(QDateTime)"), self.sinceFilterWidget.setMaximumDateTime)
        QtCore.QObject.connect(self.actionNew, QtCore.SIGNAL("triggered()"), MainWindow.newDatabaseDialog)
        QtCore.QObject.connect(self.actionOpen, QtCore.SIGNAL("triggered()"), MainWindow.openDatabaseDialog)
        QtCore.QObject.connect(self.actionDump_to_files, QtCore.SIGNAL("triggered()"), MainWindow.dumpToFiles)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.actionDump_to_files.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.actionRead_Only.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.actionClose.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.actionCreate_slice.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionRead_Only.setChecked)
        QtCore.QObject.connect(self.actionNew_node, QtCore.SIGNAL("triggered()"), MainWindow.newNodeDialog)
        QtCore.QObject.connect(self.actionDelete_node, QtCore.SIGNAL("triggered()"), MainWindow.deleteNode)
        QtCore.QObject.connect(self.actionCreate_slice, QtCore.SIGNAL("triggered()"), MainWindow.createSlice)
        QtCore.QObject.connect(self.actionAdd_condition, QtCore.SIGNAL("triggered()"), MainWindow.addCondition)
        QtCore.QObject.connect(self.actionNew_tag, QtCore.SIGNAL("triggered()"), MainWindow.newTag)
        QtCore.QObject.connect(self.actionDelete_tag, QtCore.SIGNAL("triggered()"), MainWindow.deleteTag)
        QtCore.QObject.connect(self.hierarchyTreeView, QtCore.SIGNAL("customContextMenuRequested(QPoint)"), MainWindow.showHierarchyContextMenu)
        QtCore.QObject.connect(self.actionCopy_path, QtCore.SIGNAL("triggered()"), MainWindow.copyPathToClipboard)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionAdd_condition.setDisabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionDelete_node.setDisabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionDelete_tag.setDisabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionNew_node.setDisabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpenReadOnly(bool)"), self.actionNew_tag.setDisabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.filterPanel.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.mainPanel.setEnabled)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.browsePanel.setEnabled)
        QtCore.QObject.connect(self.actionCopy_connection_string, QtCore.SIGNAL("triggered()"), MainWindow.copyConnStrToClipboard)
        QtCore.QObject.connect(MainWindow, QtCore.SIGNAL("databaseOpen(bool)"), self.actionCopy_connection_string.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "CondDBBrowser", "Browser for LHCb Conditions Database", -1))
        self.menuDataBase.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Database", None, -1))
        self.menuRecent.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Recent", None, -1))
        self.menuStandard.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Standard", None, -1))
        self.menuEdit.setTitle(QtWidgets.QApplication.translate("MainWindow", "Ed&it", None, -1))
        self.menuAdvanced.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Advanced", None, -1))
        self.menuHelp.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Help", None, -1))
        self.menuPanels.setTitle(QtWidgets.QApplication.translate("MainWindow", "Pa&nels", None, -1))
        self.filterPanel.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "&Time Browser", None, -1))
        self.iovTagFilterGroupBox.setTitle(QtWidgets.QApplication.translate("MainWindow", "Filter", None, -1))
        self.sinceLabel.setText(QtWidgets.QApplication.translate("MainWindow", "From time", None, -1))
        self.untilLabel.setText(QtWidgets.QApplication.translate("MainWindow", "To time", None, -1))
        self.tagLabel.setText(QtWidgets.QApplication.translate("MainWindow", "Tag name", None, -1))
        self.hideAutoCheckBox.setToolTip(QtWidgets.QApplication.translate("MainWindow", "If checked, the special tags starting with \"_auto_\" are not displayed.", None, -1))
        self.hideAutoCheckBox.setText(QtWidgets.QApplication.translate("MainWindow", "Hide \"_auto_\" tags", None, -1))
        self.iovTableGroupBox.setTitle(QtWidgets.QApplication.translate("MainWindow", "IOV Table", None, -1))
        self.iovUTCCheckBox.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Show the IoVs as UTC", None, -1))
        self.iovUTCCheckBox.setText(QtWidgets.QApplication.translate("MainWindow", "UTC", None, -1))
        self.payloadGroupBox.setTitle(QtWidgets.QApplication.translate("MainWindow", "Payload", None, -1))
        self.browsePanel.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "Hierarch&y Browser", None, -1))
        self.pathLabel.setText(QtWidgets.QApplication.translate("MainWindow", "Path", None, -1))
        self.actionNew.setText(QtWidgets.QApplication.translate("MainWindow", "&New", None, -1))
        self.actionNew.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+N", None, -1))
        self.actionOpen.setText(QtWidgets.QApplication.translate("MainWindow", "&Open", None, -1))
        self.actionOpen.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+O", None, -1))
        self.actionCreate_slice.setText(QtWidgets.QApplication.translate("MainWindow", "Create sl&ice", None, -1))
        self.actionCreate_slice.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+S", None, -1))
        self.actionClose.setText(QtWidgets.QApplication.translate("MainWindow", "C&lose", None, -1))
        self.actionClose.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+W", None, -1))
        self.actionAdd_condition.setText(QtWidgets.QApplication.translate("MainWindow", "&Add condition", None, -1))
        self.actionAdd_condition.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl++", None, -1))
        self.actionNew_tag.setText(QtWidgets.QApplication.translate("MainWindow", "&New tag", None, -1))
        self.actionNew_tag.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+T", None, -1))
        self.actionNew_node.setText(QtWidgets.QApplication.translate("MainWindow", "&New node", None, -1))
        self.actionDelete_node.setText(QtWidgets.QApplication.translate("MainWindow", "&Delete node", None, -1))
        self.actionDelete_tag.setText(QtWidgets.QApplication.translate("MainWindow", "D&elete tag", None, -1))
        self.actionAbout.setText(QtWidgets.QApplication.translate("MainWindow", "&About", None, -1))
        self.actionQuit.setText(QtWidgets.QApplication.translate("MainWindow", "&Quit", None, -1))
        self.actionQuit.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+Q", None, -1))
        self.actionAbout_Qt.setText(QtWidgets.QApplication.translate("MainWindow", "About &Qt", None, -1))
        self.actionDump_to_files.setText(QtWidgets.QApplication.translate("MainWindow", "&Dump to files", None, -1))
        self.actionRead_Only.setText(QtWidgets.QApplication.translate("MainWindow", "R&ead Only", None, -1))
        self.actionRead_Only.setStatusTip(QtWidgets.QApplication.translate("MainWindow", "Change the opening mode of the database (re-opens it)", None, -1))
        self.actionCopy_path.setText(QtWidgets.QApplication.translate("MainWindow", "Copy path", None, -1))
        self.actionCopy_connection_string.setText(QtWidgets.QApplication.translate("MainWindow", "&Copy connection string", None, -1))
        self.actionWelcome_message.setText(QtWidgets.QApplication.translate("MainWindow", "Welcome message", None, -1))

from CondDBBrowser.CondDBUI.Browser.Widgets import TimePointEdit, SearchableTextEdit
import Resources_rc
