(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{1801:function(o,e,t){"use strict";t.r(e);var n=t(0),s=t(83),i=t(1594);class a extends n.Component{constructor(){super(...arguments),this.monacoContainerRef=n.createRef()}componentWillMount(){this.componentWillReceiveProps=Object(s.debounce)(this.componentWillReceiveProps,0)}onDidChangeModelContent(){this.monaco&&this.props.onChange&&this.props.onChange(this.monaco.getValue())}componentDidMount(){this.monaco=i.editor.create(this.monacoContainerRef.current,{value:this.props.value,language:this.props.mode,theme:this.props.theme,minimap:{enabled:!1},autoIndent:!0}),this.props.editorFocused&&this.monaco.focus(),this.monaco.onDidChangeModelContent(this.onDidChangeModelContent.bind(this))}componentDidUpdate(){if(!this.monaco)return;this.monaco.getValue()!==this.props.value&&this.monaco.setValue(this.props.value);const o=this.monaco.getModel();o&&this.props.mode&&o.getModeId()!==this.props.mode&&i.editor.setModelLanguage(o,this.props.mode),this.props.theme&&i.editor.setTheme(this.props.theme)}componentWillReceiveProps(o){this.monaco&&this.monaco.getValue()!==o.value&&this.monaco.setValue(o.value)}componentWillUnmount(){this.monaco&&this.monaco.dispose()}render(){return n.createElement("div",{className:"monaco cm-s-composition",ref:this.monacoContainerRef})}}a.defaultProps={onChange:()=>{},editorFocused:!1,mode:"text/plain"},e.default=a}}]);