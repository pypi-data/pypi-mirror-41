{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","PlotlyTransform","PlotlyNullTransform","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash__WEBPACK_IMPORTED_MODULE_1__","MIMETYPE","defaultProps","mediaType","a","Component","[object Object]","super","arguments","this","plotDivRef","plotDiv","getFigure","figure","props","data","JSON","parse","Object","isFrozen","layout","Plotly","newPlot","nextProps","redraw","style","height","autosize","createElement","ref"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,oCAAAE,IAAAJ,EAAAG,EAAAD,EAAA,wCAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,IAGA,MACAU,EAAA,iCAMAL,EAAA,SACAA,EAAAK,SARA,0BASAL,EAAAM,aAAA,CACAC,UAVA,2BAYO,MAAAR,UAA8BG,EAAAM,EAAKC,UAC1CC,cACAC,SAAAC,WACAC,KAAAC,WAAA,CAAAC,IACAF,KAAAE,YAEAF,KAAAG,UAAA,MACA,MAAAC,EAAAJ,KAAAK,MAAAC,KACA,oBAAAF,EACA,OAAAG,KAAAC,MAAAJ,GAIA,GAAAK,OAAAC,SAAAN,GACA,OAAuBK,OAAAlB,EAAA,UAAAkB,CAASL,GAEhC,MAAAE,KAAmBA,EAAA,GAAUK,SAAA,IAAeP,EAC5C,OAAoBE,OAAAK,YAGpBd,oBAEA,MAAAO,EAAAJ,KAAAG,YACAH,KAAAY,OAAsB9B,EAAQ,MAC9BkB,KAAAY,OAAAC,QAAAb,KAAAE,QAAAE,EAAAE,KAAAF,EAAAO,QAEAd,sBAAAiB,GACA,OAAAd,KAAAK,MAAAC,OAAAQ,EAAAR,KAEAT,qBACA,MAAAO,EAAAJ,KAAAG,YACAH,KAAAE,UAEAF,KAAAE,QAAAI,KAAAF,EAAAE,KACAN,KAAAE,QAAAS,OAAAP,EAAAO,OACAX,KAAAY,OAAAG,OAAAf,KAAAE,UAEAL,SACA,MAAAc,OAAeA,GAASX,KAAAG,YACxBa,EAAA,GAIA,OAHAL,KAAAM,SAAAN,EAAAO,WACAF,EAAAC,OAAAN,EAAAM,QAEe5B,EAAAM,EAAKwB,cAAA,OAAuBC,IAAApB,KAAAC,WAAAe,WAG3C9B,EAAAM,WACAN,EAAAO,aAAA,CACAC,UAAAF,GAGeR,EAAA","file":"plotly-1088533be3bbdea33074.bundle.js","sourcesContent":["/* eslint class-methods-use-this: 0 */\nimport React from \"react\";\nimport { cloneDeep } from \"lodash\";\nconst NULL_MIMETYPE = \"text/vnd.plotly.v1+html\";\nconst MIMETYPE = \"application/vnd.plotly.v1+json\";\n/*\n * As part of the init notebook mode, Plotly sneaks a <script> tag in to load\n * the plotlyjs lib. We have already loaded this though, so we \"handle\" the\n * transform by doing nothing and returning null.\n */\nconst PlotlyNullTransform = () => null;\nPlotlyNullTransform.MIMETYPE = NULL_MIMETYPE;\nPlotlyNullTransform.defaultProps = {\n    mediaType: NULL_MIMETYPE\n};\nexport class PlotlyTransform extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.plotDivRef = (plotDiv) => {\n            this.plotDiv = plotDiv;\n        };\n        this.getFigure = () => {\n            const figure = this.props.data;\n            if (typeof figure === \"string\") {\n                return JSON.parse(figure);\n            }\n            // The Plotly API *mutates* the figure to include a UID, which means\n            // they won't take our frozen objects\n            if (Object.isFrozen(figure)) {\n                return cloneDeep(figure);\n            }\n            const { data = {}, layout = {} } = figure;\n            return { data, layout };\n        };\n    }\n    componentDidMount() {\n        // Handle case of either string to be `JSON.parse`d or pure object\n        const figure = this.getFigure();\n        this.Plotly = require(\"@nteract/plotly\");\n        this.Plotly.newPlot(this.plotDiv, figure.data, figure.layout);\n    }\n    shouldComponentUpdate(nextProps) {\n        return this.props.data !== nextProps.data;\n    }\n    componentDidUpdate() {\n        const figure = this.getFigure();\n        if (!this.plotDiv)\n            return;\n        this.plotDiv.data = figure.data;\n        this.plotDiv.layout = figure.layout;\n        this.Plotly.redraw(this.plotDiv);\n    }\n    render() {\n        const { layout } = this.getFigure();\n        const style = {};\n        if (layout && layout.height && !layout.autosize) {\n            style.height = layout.height;\n        }\n        return React.createElement(\"div\", { ref: this.plotDivRef, style: style });\n    }\n}\nPlotlyTransform.MIMETYPE = MIMETYPE;\nPlotlyTransform.defaultProps = {\n    mediaType: MIMETYPE\n};\nexport { PlotlyNullTransform };\nexport default PlotlyTransform;\n"],"sourceRoot":""}