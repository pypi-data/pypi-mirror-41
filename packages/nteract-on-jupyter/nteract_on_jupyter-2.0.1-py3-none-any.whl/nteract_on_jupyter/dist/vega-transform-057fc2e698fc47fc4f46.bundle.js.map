{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-vega/src/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","VegaEmbed","VegaLite1","Vega2","VegaLite2","Vega3","_nteract_vega_embed_v2__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","vega_embed__WEBPACK_IMPORTED_MODULE_3__","MIMETYPE_VEGA2","DEFAULT_WIDTH","DEFAULT_HEIGHT","embed","el","spec","mode","version","cb","embedSpec","Object","assign","config","cell","width","height","actions","then","result","catch","[object Object]","this","props","data","embedMode","renderedCallback","nextProps","ref","defaultProps","MIMETYPE","mediaType"],"mappings":"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","file":"vega-transform-057fc2e698fc47fc4f46.bundle.js","sourcesContent":["import vegaEmbed2 from \"@nteract/vega-embed-v2\";\nimport { merge } from \"lodash\";\nimport * as React from \"react\";\nimport vegaEmbed3 from \"vega-embed\";\nconst MIMETYPE_VEGA2 = \"application/vnd.vega.v2+json\";\nconst MIMETYPE_VEGA3 = \"application/vnd.vega.v3+json\";\nconst MIMETYPE_VEGALITE1 = \"application/vnd.vegalite.v1+json\";\nconst MIMETYPE_VEGALITE2 = \"application/vnd.vegalite.v2+json\";\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = DEFAULT_WIDTH / 1.5;\nconst defaultCallback = () => { };\nfunction embed(el, spec, mode, version, cb) {\n    if (version === \"vega2\") {\n        const embedSpec = {\n            mode,\n            spec: Object.assign({}, spec)\n        };\n        if (mode === \"vega-lite\") {\n            embedSpec.spec.config = merge({\n                cell: {\n                    width: DEFAULT_WIDTH,\n                    height: DEFAULT_HEIGHT\n                }\n            }, embedSpec.spec.config);\n        }\n        vegaEmbed2(el, embedSpec, cb);\n    }\n    else {\n        spec = Object.assign({}, spec);\n        if (mode === \"vega-lite\") {\n            spec.config = merge({\n                cell: {\n                    width: DEFAULT_WIDTH,\n                    height: DEFAULT_HEIGHT\n                }\n            }, spec.config);\n        }\n        vegaEmbed3(el, spec, {\n            mode,\n            actions: false\n        })\n            .then(result => cb(null, result))\n            .catch(cb);\n    }\n}\nexport class VegaEmbed extends React.Component {\n    componentDidMount() {\n        if (this.el &&\n            this.props.data &&\n            this.props.embedMode &&\n            this.props.version &&\n            this.props.renderedCallback) {\n            embed(this.el, this.props.data, this.props.embedMode, this.props.version, this.props.renderedCallback);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        return this.props.data !== nextProps.data;\n    }\n    componentDidUpdate() {\n        if (this.el &&\n            this.props.data &&\n            this.props.embedMode &&\n            this.props.version &&\n            this.props.renderedCallback) {\n            embed(this.el, this.props.data, this.props.embedMode, this.props.version, this.props.renderedCallback);\n        }\n    }\n    render() {\n        // Note: We hide vega-actions since they won't work in our environment\n        // (this is only needed for vega2, since vega-embed v3 supports hiding\n        // actions via options)\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"style\", null, \".vega-actions{ display: none; }\"),\n            React.createElement(\"div\", { ref: el => {\n                    this.el = el;\n                } })));\n    }\n}\nVegaEmbed.defaultProps = {\n    renderedCallback: defaultCallback,\n    embedMode: \"vega-lite\",\n    version: \"vega2\"\n};\nexport function VegaLite1(props) {\n    return React.createElement(VegaEmbed, { data: props.data, embedMode: \"vega-lite\", version: \"vega2\" });\n}\nVegaLite1.MIMETYPE = MIMETYPE_VEGALITE1;\nVegaLite1.defaultProps = {\n    mediaType: MIMETYPE_VEGA2\n};\nexport function Vega2(props) {\n    return React.createElement(VegaEmbed, { data: props.data, embedMode: \"vega\", version: \"vega2\" });\n}\nVega2.MIMETYPE = MIMETYPE_VEGA2;\nVega2.defaultProps = {\n    mediaType: MIMETYPE_VEGA2\n};\n// For backwards compatibility\nexport { VegaLite1 as VegaLite, Vega2 as Vega };\nexport function VegaLite2(props) {\n    return React.createElement(VegaEmbed, { data: props.data, embedMode: \"vega-lite\", version: \"vega3\" });\n}\nVegaLite2.MIMETYPE = MIMETYPE_VEGALITE2;\nVegaLite2.defaultProps = {\n    mediaType: MIMETYPE_VEGALITE2\n};\nexport function Vega3(props) {\n    return React.createElement(VegaEmbed, { data: props.data, embedMode: \"vega\", version: \"vega3\" });\n}\nVega3.MIMETYPE = MIMETYPE_VEGA3;\nVega3.defaultProps = {\n    mediaType: MIMETYPE_VEGA3\n};\n"],"sourceRoot":""}