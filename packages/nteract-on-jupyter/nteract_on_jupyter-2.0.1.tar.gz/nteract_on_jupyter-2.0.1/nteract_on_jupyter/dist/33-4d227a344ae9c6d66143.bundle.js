(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[33],{

/***/ "../../../node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js":
/*!*************************************************************************************************************************!*\
  !*** /Users/kylek/code/src/github.com/nteract/nteract-ext/node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js ***!
  \*************************************************************************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nvar conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nvar language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pug',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\r\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\r\n    tags: [\r\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\r\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\r\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\r\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\r\n        'em', 'embed',\r\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\r\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n        'i', 'iframe', 'img', 'input', 'ins',\r\n        'keygen', 'kbd',\r\n        'label', 'li', 'link',\r\n        'map', 'mark', 'menu', 'meta', 'meter',\r\n        'nav', 'noframes', 'noscript',\r\n        'object', 'ol', 'optgroup', 'option', 'output',\r\n        'p', 'param', 'pre', 'progress',\r\n        'q',\r\n        'rp', 'rt', 'ruby',\r\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\r\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\r\n        'u', 'ul',\r\n        'video',\r\n        'wbr'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Tag or a keyword at start\r\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\r\n                {\r\n                    cases: {\r\n                        '$2@tags': {\r\n                            cases: {\r\n                                '@eos': ['', 'tag'],\r\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\r\n                            }\r\n                        },\r\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\r\n                        '@default': ['', '',]\r\n                    }\r\n                }\r\n            ],\r\n            // id\r\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.id'],\r\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // class\r\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.class'],\r\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // plain text with pipe\r\n            [/^(\\s*)(\\|.*)$/, ''],\r\n            { include: '@whitespace' },\r\n            // keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        tag: [\r\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\r\n            [/\\s+/, { token: '', next: '@simpleText' }],\r\n            // id\r\n            [/#[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.id', next: '@pop' },\r\n                        '@default': 'tag.id'\r\n                    }\r\n                }],\r\n            // class\r\n            [/\\.[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.class', next: '@pop' },\r\n                        '@default': 'tag.class'\r\n                    }\r\n                }],\r\n            // attributes\r\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\r\n        ],\r\n        simpleText: [\r\n            [/[^#]+$/, { token: '', next: '@popall' }],\r\n            [/[^#]+/, { token: '' }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, {\r\n                    cases: {\r\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\r\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\r\n                    }\r\n                }],\r\n            [/#$/, { token: '', next: '@popall' }],\r\n            [/#/, '']\r\n        ],\r\n        attributeList: [\r\n            [/\\s+/, ''],\r\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\r\n            [/\\w+/, 'attribute.name'],\r\n            [/,/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\r\n                        '@default': 'attribute.delimiter'\r\n                    }\r\n                }],\r\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\r\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        whitespace: [\r\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }],\r\n        ],\r\n        blockText: [\r\n            [/^\\s+.*$/, {\r\n                    cases: {\r\n                        '($S2\\\\s+.*$)': { token: '$S3' },\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/./, { token: '@rematch', next: '@popall' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'#]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\r\n            [/#/, 'string'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': { token: 'string' }\r\n                    }\r\n                }],\r\n        ],\r\n        // Almost identical to above, except for escapes and the output token\r\n        value: [\r\n            [/[^\\\\\"']+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\r\n                        '@default': { token: 'attribute.value' }\r\n                    }\r\n                }],\r\n        ],\r\n    },\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js\n");

/***/ })

}]);