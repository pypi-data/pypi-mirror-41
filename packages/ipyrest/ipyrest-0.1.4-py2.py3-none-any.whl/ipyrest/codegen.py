"""
This module is supposed to create code snippets in various langauges
to be instantiated with some API request configuration and executed
for quick testing or really simple reuse.

So far only Python with the requests module is supported.
"""

from jinja2 import Template


python_requests_template = """\
# Automatically generated by ipyrest, see github.com/deeplook/ipyrest

from requests import request

method = {{method.__repr__()}}
url = {{url.__repr__()}}
{%if headers %}headers = {{headers.__repr__()}}{% endif -%}
{%if params %}params = {{params.__repr__()}}{% endif -%}
{%if data %}data = {{data.__repr__()}}{% endif -%}
{%if headers or params or data %}{% endif %}

response = request(method, url{%if headers %}, headers=headers{% endif -%}\
{%if params %}, params=params{% endif -%}{%if data %}, data=data{% endif %})
print(response.text)
"""


def create_code(template: str, config: dict) -> str:
    "Return a code snippet created from a template with some req. config."

    template = Template(template)
    config_defaults = dict(method='GET')
    config_defaults.update(config)
    snippet = template.render(**config_defaults)
    return snippet


from .ipyrest import Api

def create_code_from_api(template: str, api: Api) -> str:
    "Return a code snippet created from a template with some req. config."

    template = Template(template)
    config = dict(method=api.method, url=api.url, params=api.params, headers=api.headers)
    snippet = template.render(**config)
    return snippet