#!/usr/bin/env python3

# Copyright (C) 2017-2019 The btclib developers
#
# This file is part of btclib. It is subject to the license terms in the
# LICENSE file found in the top-level directory of this distribution.
#
# No part of btclib including this file, may be copied, modified, propagated,
# or distributed except according to the terms contained in the LICENSE file.

"""
Elliptic curves (SEC 2 v.1, SEC 2 v.2, and test curves

"""

# scroll down at the end of the file for relevant code

from btclib.ec import EC

# SEC 2 v.1 curves, removed from SEC 2 v.2 as insecure ones
# http://www.secg.org/SEC2-Ver-1.0.pdf

__p  = (2**128 - 3) // 76439
__a  = 0xDB7C2ABF62E35E668076BEAD2088
__b  = 0x659EF8BA043916EEDE8911702B22
__Gx = 0x09487239995A5EE76B55F9C2F098
__Gy = 0xA89CE5AF8724C0A23E0E0FF77500
__n  = 0xDB7C2ABF62E35E7628DFAC6561C5
__h  = 1
secp112r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 64, False)

__p  = (2**128 - 3) // 76439
__a  = 0x6127C24C05F38A0AAAF65C0EF02C
__b  = 0x51DEF1815DB5ED74FCC34C85D709
__Gx = 0x4BA30AB5E892B4E1649DD0928643
__Gy = 0xADCD46F5882E3747DEF36E956E97
__n  = 0x36DF0AAFD8B8D7597CA10520D04B
__h  = 4
secp112r2 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 64, False)

__p  = 2**128 - 2**97 - 1
__a  = 0xFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC
__b  = 0xE87579C11079F43DD824993C2CEE5ED3
__Gx = 0x161FF7528B899B2D0C28607CA52C5B86
__Gy = 0xCF5AC8395BAFEB13C02DA292DDED7A83
__n  = 0xFFFFFFFE0000000075A30D1B9038A115
__h  = 1
secp128r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 64, False)

__p  = 2**128 - 2**97 -1
__a  = 0xD6031998D1B3BBFEBF59CC9BBFF9AEE1
__b  = 0x5EEEFCA380D02919DC2C6558BB6D8A5D
__Gx = 0x7B6AA5D85E572983E6FB32A7CDEBC140
__Gy = 0x27B6916A894D3AEE7106FE805FC34B44
__n  = 0x3FFFFFFF7FFFFFFFBE0024720613B5A3
__h  = 4
secp128r2 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 64, False)

__p  = 2**160 - 2**32 - 2**14 - 2**12 - 2**9 - 2**8 -2**7 - 2**3 - 2**2 - 1
__a  = 0x0000000000000000000000000000000000000000
__b  = 0x0000000000000000000000000000000000000007
__Gx = 0x3B4C382CE37AA192A4019E763036F4F5DD4D7EBB
__Gy = 0x938CF935318FDCED6BC28286531733C3F03C4FEE
__n =0x0100000000000000000001B8FA16DFAB9ACA16B6B3
__h  = 1
secp160k1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 80, False)

__p  = 2**160 - 2**31 - 1
__a  = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC
__b  = 0x1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45
__Gx = 0x4A96B5688EF573284664698968C38BB913CBFC82
__Gy = 0x23A628553168947D59DCC912042351377AC5FB32
__n =0x0100000000000000000001F4C8F927AED3CA752257
__h  = 1
secp160r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 80, False)

__p  = 2**160 - 2**32 - 2**14 - 2**12 - 2**9 - 2**8 -2**7 - 2**3 -2**2 - 1
__a  = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC70
__b  = 0xB4E134D3FB59EB8BAB57274904664D5AF50388BA
__Gx = 0x52DCB034293A117E1F4FF11B30F7199D3144CE6D
__Gy = 0xFEAFFEF2E331F296E071FA0DF9982CFEA7D43F2E 
__n =0x0100000000000000000000351EE786A818F3A1A16B
__h  = 1
secp160r2 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 80, False)


# curves included in both SEC 2 v.1 and SEC 2 v.2
# http://www.secg.org/sec2-v2.pdf

__p = 2**192 - 2**32 - 2**12 - 2**8 - 2**7 - 2**6 - 2**3 - 1
__a = 0
__b = 3
__Gx = 0xDB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D
__Gy = 0x9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D
__n = 0xFFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D
__h  = 1
secp192k1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 96, True)

__p = 2**192 - 2**64 - 1
__a = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC
__b = 0X64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1
__Gx = 0x188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012
__Gy = 0x07192B95FFC8DA78631011ED6B24CDD573F977A11E794811
__n = 0xFFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831
__h  = 1
secp192r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 96, True)

__p = 2**224 - 2**32 - 2**12 - 2**11 - 2**9 - 2**7 - 2**4 - 2 - 1
__a = 0
__b = 5
__Gx = 0xA1455B334DF099DF30FC28A169A467E9E47075A90F7E650EB6B7A45C
__Gy = 0x7E089FED7FBA344282CAFBD6F7E319F7C0B0BD59E2CA4BDB556D61A5
__n = 0x010000000000000000000000000001DCE8D2EC6184CAF0A971769FB1F7
__h  = 1
secp224k1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 112, True)

__p = 2**224 - 2**96 + 1
__a = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE
__b = 0XB4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4
__Gx = 0xB70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21
__Gy = 0xBD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34
__n = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D
__h  = 1
secp224r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 112, True)

# bitcoin curve
__p = 2**256 - 2**32 - 977
__a = 0
__b = 7
__Gx = 0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
__Gy = 0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8
__n = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
__h  = 1
secp256k1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 128, True)

__p = 2**256 - 2**224 + 2**192 + 2**96 - 1
__a = 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
__b = 0X5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
__Gx = 0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
__Gy = 0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
__n = 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551
__h  = 1
secp256r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 128, True)

__p = 2**384 - 2**128 - 2**96 + 2**32 - 1
__a = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC
__b = 0XB3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF
__Gx = 0xAA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7
__Gy = 0x3617DE4A96262C6F5D9E98BF9292DC29F8F41DBD289A147CE9DA3113B5F0B8C00A60B1CE1D7E819D7A431D7C90EA0E5F
__n = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973
__h  = 1
secp384r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 192, True)

__p = 2**521 - 1
__a = 0x01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC
__b = 0x0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00
__Gx = 0x00C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66
__Gy = 0x011839296A789A3BC0045C8A5FB42C7D1BD998F54449579B446817AFBD17273E662C97EE72995EF42640C550B9013FAD0761353C7086A272C24088BE94769FD16650
__n = 0x01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409
__h  = 1
secp521r1 = EC(__p, __a, __b, (__Gx, __Gy), __n, __h, 256, True)

# test curves: very low cardinality

ec13_11 = EC(13, 7, 6, (1,   1),  11, 1, 0, False)
ec13_19 = EC(13, 0, 2, (1,   9),  19, 1, 0, False)
ec17_13 = EC(17, 6, 8, (0,  12),  13, 2, 0, False)
ec17_23 = EC(17, 3, 5, (1,  14),  23, 1, 0, False)
ec19_13 = EC(19, 0, 2, (4,  16),  13, 2, 0, False)
ec19_23 = EC(19, 2, 9, (0,  16),  23, 1, 0, False)
ec23_19 = EC(23, 9, 7, (5,   4),  19, 1, 0, False)
ec23_31 = EC(23, 5, 1, (0,   1),  31, 1, 0, False)


# FIPS PUB 186-4
# FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION
# Digital Signature Standard (DSS)
# https://oag.ca.gov/sites/all/files/agweb/pdfs/erds1/fips_pub_07_2013.pdf

__p = 6277101735386680763835789423207666416083908700390324961279
__n = 6277101735386680763835789423176059013767194773182842284081
__SEED = 0x3045ae6fc8422f64ed579528d38120eae12196d5
__c  = 0x3099d2bbbfcb2538542dcd5fb078b6ef5f3d6fe2c745de65
__b  = 0x64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1
__Gx = 0x188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012
__Gy = 0x07192b95ffc8da78631011ed6b24cdd573f977a11e794811
P192 = EC(__p, __p-3, __b, (__Gx, __Gy), __n, 1, 96, True)

__p = 26959946667150639794667015087019630673557916260026308143510066298881
__n = 26959946667150639794667015087019625940457807714424391721682722368061
__SEED = 0xbd71344799d5c7fcdc45b59fa3b9ab8f6a948bc5
__c  = 0x5b056c7e11dd68f40469ee7f3c7a7d74f7d121116506d031218291fb
__b  = 0xb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4
__Gx = 0xb70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21
__Gy = 0xbd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34
P224 = EC(__p, __p-3, __b, (__Gx, __Gy), __n, 1, 112, True)

__p = 115792089210356248762697446949407573530086143415290314195533631308867097853951
__n = 115792089210356248762697446949407573529996955224135760342422259061068512044369
__SEED = 0xc49d360886e704936a6678e1139d26b7819f7e90
__c  = 0x7efba1662985be9403cb055c75d4f7e0ce8d84a9c5114abcaf3177680104fa0d
__b  = 0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
__Gx = 0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296
__Gy = 0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5
P256 = EC(__p, __p-3, __b, (__Gx, __Gy), __n, 1, 128, True)

__p = 39402006196394479212279040100143613805079739270465446667948293404245721771496870329047266088258938001861606973112319
__n = 39402006196394479212279040100143613805079739270465446667946905279627659399113263569398956308152294913554433653942643
__SEED = 0xa335926aa319a27a1d00896a6773a4827acdac73
__c  = 0x79d1e655f868f02fff48dcdee14151ddb80643c1406d0ca10dfe6fc52009540a495e8042ea5f744f6e184667cc722483
__b  = 0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef
__Gx = 0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7
__Gy = 0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f 
P384 = EC(__p, __p-3, __b, (__Gx, __Gy), __n, 1, 192, True)

__p = 6864797660130609714981900799081393217269435300143305409394463459185543183397656052122559640661454554977296311391480858037121987999716643812574028291115057151
__n = 6864797660130609714981900799081393217269435300143305409394463459185543183397655394245057746333217197532963996371363321113864768612440380340372808892707005449
__SEED = 0xd09e8800291cb85396cc6717393284aaa0da64ba
__c  = 0x0b48bfa5f420a34949539d2bdfc264eeeeb077688e44fbf0ad8f6d0edb37bd6b533281000518e19f1b9ffbe0fe9ed8a3c2200b8f875e523868c70c1e5bf55bad637
__b  = 0x051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00
__Gx = 0x0c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66
__Gy = 0x11839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650 
P521 = EC(__p, __p-3, __b, (__Gx, __Gy), __n, 1, 256, True)

# curve sets

low_card_curves = [ec13_11, ec13_19,  # 13 % 4 = 1; 13 % 8 = 5
                   ec17_13, ec17_23,  # 17 % 4 = 1; 17 % 8 = 1
                   ec19_13, ec19_23,  # 19 % 4 = 3; 19 % 8 = 3
                   ec23_19, ec23_31   # 23 % 4 = 3; 23 % 8 = 7 
]

SEC2V2_curves = [secp192k1, secp192r1,
                 secp224k1, secp224r1,
                 secp256k1, secp256r1,
                 secp384r1,
                 secp521r1]

SEC2V1_curves = SEC2V2_curves + [secp112r1, secp112r2,
                                 secp128r1, secp128r2,
                                 secp160k1, secp160r1, secp160r2]

curves = [P192, P224, P256, P384, P521]

all_curves = low_card_curves + SEC2V1_curves + curves
