(function(){if(window.DMP_CONTEXT){return;}
window.DMP_CONTEXT={__version__:'5.9.10',contexts:{},contextsByName:{},lastContext:null,bundleFunctions:{},logEnabled:null,set:function(context){DMP_CONTEXT.logEnabled=DMP_CONTEXT.logEnabled||context.log;if(DMP_CONTEXT.__version__!=context.version){DMP_CONTEXT.log(['server version',context.version,'is different from dmp-common.js',DMP_CONTEXT.__version__,'- unexpected behavior may occur']);}
context.pendingCalls=0;DMP_CONTEXT.contexts[context.id]=context;DMP_CONTEXT.lastContext=context;for(var i=0;i<context.templates.length;i++){if(typeof DMP_CONTEXT.contextsByName[context.templates[i]]==="undefined"){DMP_CONTEXT.contextsByName[context.templates[i]]=[];}
DMP_CONTEXT.contextsByName[context.templates[i]].push(context);}
DMP_CONTEXT.log(["context linked:"],context);},get:function(option){var ret=DMP_CONTEXT.getAll(option);if(ret.length==0){return undefined;}
return ret[ret.length-1];},getAll:function(option){var ret=[];if(!option&&document.currentScript&&document.currentScript.getAttribute('data-context')){option=document.currentScript;}
if(!option&&DMP_CONTEXT.lastContext){ret.push(DMP_CONTEXT.lastContext.values);}
else if(typeof option==='string'||option instanceof String){var matches=DMP_CONTEXT.contextsByName[option];if(typeof matches!=="undefined"){for(var i=0;i<matches.length;i++){ret.push(matches[i]);}}}
else if(option&&option.nodeType===1&&option.nodeName.toLowerCase()=='script'&&option.getAttribute('data-context')){var c=DMP_CONTEXT.contexts[option.getAttribute('data-context')];if(typeof c!=="undefined"){ret.push(c.values);}}
return ret;},loadBundle(template_functions){var templates=Object.keys(template_functions);DMP_CONTEXT.log(['context loaded',templates.length,'template functions from bundle'],templates);for(var i=0;i<templates.length;i++){DMP_CONTEXT.bundleFunctions[templates[i]]=template_functions[templates[i]];}},checkBundleLoaded(contextid){var context=DMP_CONTEXT.contexts[contextid];if(typeof context==="undefined"){return;}
var notLoaded=[];for(var i=0;i<context.templates.length;i++){var template=context.templates[i];if(typeof DMP_CONTEXT.bundleFunctions[template]==="undefined"){notLoaded.push(template);}}
if(notLoaded.length>0){DMP_CONTEXT.log(['context waiting to call template functions:',notLoaded.length,'not loaded:',notLoaded.join(', ')],context);return;}
if(!context.pendingCalls){DMP_CONTEXT.log(['context waiting to call template functions: required functions loaded but waiting for pendingCalls'],context);}else{DMP_CONTEXT.log(['context ready to call template functions: required functions loaded and pendingCalls > 0'],context)
while(context.pendingCalls>0){context.pendingCalls=Math.max(0,context.pendingCalls-1);for(var i=0;i<context.templates.length;i++){DMP_CONTEXT.log(['context calling',context.templates[i]]);DMP_CONTEXT.bundleFunctions[context.templates[i]]();}}}},callBundleContext(contextid){var context=DMP_CONTEXT.contexts[contextid];if(typeof context==="undefined"){return;}
context.pendingCalls++;DMP_CONTEXT.log(['context incrementing pendingCalls'],context);DMP_CONTEXT.checkBundleLoaded(contextid);},log(messages,data){if(DMP_CONTEXT.logEnabled){console.debug('[DMP] '+messages.join(' '),data||'');}},};})()