Metadata-Version: 1.1
Name: proxy.py
Version: 0.3
Summary: Lightweight HTTP, HTTPS, WebSockets Proxy Server in a single Python file
Home-page: https://github.com/abhinavsingh/proxy.py
Author: Abhinav Singh
Author-email: mailsforabhinav@gmail.com
License: BSD
Download-URL: https://github.com/abhinavsingh/proxy.py/archive/master.zip
Description: proxy.py
        ========
        
        Lightweight HTTP, HTTPS and WebSockets Proxy Server in Python.
        
        Features
        --------
        
        - Distributed as a single file module
        - No external dependency other than standard Python library
        - Support for `http`, `https` and `websockets` request proxy
        - Optimize for large file uploads and downloads
        - IPv4 and IPv6 support
        - Basic authentication support
        
        Install
        -------
        
        To install proxy.py, simply:
        
        	$ pip install proxy.py
        
        Usage
        -----
        
        ```
        $ proxy.py -h
        usage: proxy.py [-h] [--hostname HOSTNAME] [--port PORT] [--backlog BACKLOG]
                        [--basic-auth BASIC_AUTH]
                        [--server-recvbuf-size SERVER_RECVBUF_SIZE]
                        [--client-recvbuf-size CLIENT_RECVBUF_SIZE]
                        [--log-level LOG_LEVEL]
        
        proxy.py v0.3
        
        optional arguments:
          -h, --help            show this help message and exit
          --hostname HOSTNAME   Default: 127.0.0.1
          --port PORT           Default: 8899
          --backlog BACKLOG     Default: 100. Maximum number of pending connections to
                                proxy server
          --basic-auth BASIC_AUTH
                                Default: No authentication. Specify colon separated
                                user:password to enable basic authentication.
          --server-recvbuf-size SERVER_RECVBUF_SIZE
                                Default: 8 KB. Maximum amount of data received from
                                the server in a single recv() operation. Bump this
                                value for faster downloads at the expense of increased
                                RAM.
          --client-recvbuf-size CLIENT_RECVBUF_SIZE
                                Default: 8 KB. Maximum amount of data received from
                                the client in a single recv() operation. Bump this
                                value for faster uploads at the expense of increased
                                RAM.
          --log-level LOG_LEVEL
                                DEBUG, INFO (default), WARNING, ERROR, CRITICAL
        
        Having difficulty using proxy.py? Report at:
        https://github.com/abhinavsingh/proxy.py/issues/new
        ```
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: No Input/Output (Daemon)
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: MacOS
Classifier: Operating System :: MacOS :: MacOS 9
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Operating System :: Microsoft
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Internet :: Proxy Servers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Networking :: Monitoring
Classifier: Topic :: Utilities
