# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import SenseData.stock_pb2 as stock__pb2


class StockInfStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_stock_price_tick = channel.unary_unary(
        '/StockInf/get_stock_price_tick',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_stock_price_day = channel.unary_unary(
        '/StockInf/get_stock_price_day',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_company_info = channel.unary_unary(
        '/StockInf/get_company_info',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_industry_concept = channel.unary_unary(
        '/StockInf/get_industry_concept',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_company_alias = channel.unary_unary(
        '/StockInf/get_company_alias',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_chairman_supervisor = channel.unary_unary(
        '/StockInf/get_chairman_supervisor',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_stockholder = channel.unary_unary(
        '/StockInf/get_stockholder',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )
    self.get_subcompany = channel.unary_unary(
        '/StockInf/get_subcompany',
        request_serializer=stock__pb2.Request.SerializeToString,
        response_deserializer=stock__pb2.Reply.FromString,
        )


class StockInfServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_stock_price_tick(self, request, context):
    """输入股票代码返回最新一天股票价格信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_stock_price_day(self, request, context):
    """输入股票代码返回历史股价信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_company_info(self, request, context):
    """输入股票代码返回基础数据信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_industry_concept(self, request, context):
    """输入股票代码返回行业/概念信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_company_alias(self, request, context):
    """输入股票代码返回名称
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_chairman_supervisor(self, request, context):
    """输入股票代码返回董监高
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_stockholder(self, request, context):
    """输入股票代码返回股东信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_subcompany(self, request, context):
    """输入股票代码返回子公司信息
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StockInfServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_stock_price_tick': grpc.unary_unary_rpc_method_handler(
          servicer.get_stock_price_tick,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_stock_price_day': grpc.unary_unary_rpc_method_handler(
          servicer.get_stock_price_day,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_company_info': grpc.unary_unary_rpc_method_handler(
          servicer.get_company_info,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_industry_concept': grpc.unary_unary_rpc_method_handler(
          servicer.get_industry_concept,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_company_alias': grpc.unary_unary_rpc_method_handler(
          servicer.get_company_alias,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_chairman_supervisor': grpc.unary_unary_rpc_method_handler(
          servicer.get_chairman_supervisor,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_stockholder': grpc.unary_unary_rpc_method_handler(
          servicer.get_stockholder,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
      'get_subcompany': grpc.unary_unary_rpc_method_handler(
          servicer.get_subcompany,
          request_deserializer=stock__pb2.Request.FromString,
          response_serializer=stock__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'StockInf', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
