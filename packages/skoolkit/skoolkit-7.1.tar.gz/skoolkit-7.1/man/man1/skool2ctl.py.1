.\" Man page generated from reStructuredText.
.
.TH "SKOOL2CTL.PY" "1" "Feb 02, 2019" "7.1" "SkoolKit"
.SH NAME
skool2ctl.py \- convert a skool file into a control file
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBskool2ctl.py\fP [options] FILE
.SH DESCRIPTION
.sp
\fBskool2ctl.py\fP converts a skool file into a control file. The control file is
written to stdout. When FILE is \(aq\-\(aq, \fBskool2ctl.py\fP reads from standard
input.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-b\fP,\fB  \-\-preserve\-base
Preserve the base of decimal and hexadecimal values in instruction operands
and DEFB, DEFM, DEFS and DEFW statements. (By default, only binary values and
character values are preserved.)
.UNINDENT
.INDENT 0.0
.TP
.B \-E, \-\-end \fIADDR\fP
Stop converting at this address. \fIADDR\fP must be a decimal number, or a
hexadecimal number prefixed by \(aq0x\(aq.
.UNINDENT
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-hex
Write addresses in upper case hexadecimal format.
.TP
.B \-l\fP,\fB  \-\-hex\-lower
Write addresses in lower case hexadecimal format.
.UNINDENT
.INDENT 0.0
.TP
.B \-S, \-\-start \fIADDR\fP
Start converting at this address. \fIADDR\fP must be a decimal number, or a
hexadecimal number prefixed by \(aq0x\(aq.
.UNINDENT
.INDENT 0.0
.TP
.B \-V\fP,\fB  \-\-version
Show the SkoolKit version number and exit.
.UNINDENT
.INDENT 0.0
.TP
.B \-w, \-\-write \fIX\fP
Write only these elements, where \fIX\fP is one or more of:
.nf

.in +2
\fBa\fP = ASM directives
\fBb\fP = block types and addresses
\fBt\fP = block titles
\fBd\fP = block descriptions
\fBr\fP = registers
\fBm\fP = mid\-block comments and block start/end comments
\fBs\fP = sub\-block types and addresses
\fBc\fP = instruction\-level comments
.in -2
.fi
.sp
.sp
The default is to write all of these elements.
.UNINDENT
.SH EXAMPLES
.INDENT 0.0
.IP 1. 3
Convert \fBgame.skool\fP into a control file named \fBgame.ctl\fP:
.nf

.in +2
\fBskool2ctl.py game.skool > game.ctl\fP
.in -2
.fi
.sp
.IP 2. 3
Convert \fBgame.skool\fP into a control file containing only block types,
addresses and titles:
.nf

.in +2
\fBskool2ctl.py \-w bt game.skool > game.ctl\fP
.in -2
.fi
.sp
.UNINDENT
.SH AUTHOR
Richard Dymond
.SH COPYRIGHT
2019, Richard Dymond
.\" Generated by docutils manpage writer.
.
